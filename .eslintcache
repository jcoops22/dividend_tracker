[{"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Header.js":"1","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/App.js":"2","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksList.js":"3","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Toolbar.js":"4","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddForm.js":"5","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Home.js":"6","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SearchStocks.js":"7","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/stockUtilities.js":"8","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/nyseOBJ.js":"9","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Landing.js":"10","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SignIn.js":"11","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Buttons/GoogleSignInButton.js":"12","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Register.js":"13","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Firebase/firebase.js":"14","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksWrapper.js":"15","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Drawer.js":"16","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StockToolbar.js":"17","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/index.js":"18","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/LoadingIcon.js":"19","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/mediaquery.js":"20","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/TransformIcon.js":"21","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/DividendsForm.js":"22","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ViewAll.js":"23","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Footer.js":"24","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddMissing.js":"25","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/D3Graph.js":"26","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Reports.js":"27","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/HowManyStocks.js":"28","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/reportWebVitals.js":"29","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/StocksProvider.js":"30","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/UserProvider.js":"31","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/ErrorComponent.js":"32","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/MostDividends.js":"33","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/UtilitiesRow.js":"34"},{"size":2891,"mtime":1614810854593,"results":"35","hashOfConfig":"36"},{"size":1802,"mtime":1613711529579,"results":"37","hashOfConfig":"36"},{"size":8672,"mtime":1614806814981,"results":"38","hashOfConfig":"36"},{"size":2997,"mtime":1614806828992,"results":"39","hashOfConfig":"36"},{"size":1357,"mtime":1614805701102,"results":"40","hashOfConfig":"36"},{"size":2041,"mtime":1614807133116,"results":"41","hashOfConfig":"36"},{"size":10107,"mtime":1613713365141,"results":"42","hashOfConfig":"36"},{"size":8481,"mtime":1613618533821,"results":"43","hashOfConfig":"36"},{"size":196095,"mtime":1608023988086,"results":"44","hashOfConfig":"36"},{"size":13043,"mtime":1614814132372,"results":"45","hashOfConfig":"36"},{"size":6675,"mtime":1614793779246,"results":"46","hashOfConfig":"36"},{"size":266,"mtime":1608090369026,"results":"47","hashOfConfig":"36"},{"size":5855,"mtime":1614791382378,"results":"48","hashOfConfig":"36"},{"size":1437,"mtime":1613715263900,"results":"49","hashOfConfig":"36"},{"size":3637,"mtime":1614751129301,"results":"50","hashOfConfig":"36"},{"size":5063,"mtime":1614060002316,"results":"51","hashOfConfig":"36"},{"size":7748,"mtime":1614060194401,"results":"52","hashOfConfig":"36"},{"size":800,"mtime":1613715026565,"results":"53","hashOfConfig":"36"},{"size":3136,"mtime":1608567496065,"results":"54","hashOfConfig":"36"},{"size":591,"mtime":1601309934587,"results":"55","hashOfConfig":"36"},{"size":1328,"mtime":1608604373721,"results":"56","hashOfConfig":"36"},{"size":11733,"mtime":1614468408450,"results":"57","hashOfConfig":"36"},{"size":6535,"mtime":1614816492254,"results":"58","hashOfConfig":"36"},{"size":646,"mtime":1614097389266,"results":"59","hashOfConfig":"36"},{"size":4407,"mtime":1613711886640,"results":"60","hashOfConfig":"36"},{"size":5232,"mtime":1613714549483,"results":"61","hashOfConfig":"36"},{"size":2236,"mtime":1613937541938,"results":"62","hashOfConfig":"36"},{"size":480,"mtime":1613936854861,"results":"63","hashOfConfig":"36"},{"size":362,"mtime":1607318708302,"results":"64","hashOfConfig":"36"},{"size":2168,"mtime":1614805103384,"results":"65","hashOfConfig":"36"},{"size":1054,"mtime":1613697540099,"results":"66","hashOfConfig":"36"},{"size":455,"mtime":1613751143896,"results":"67","hashOfConfig":"36"},{"size":1307,"mtime":1613942797587,"results":"68","hashOfConfig":"36"},{"size":1878,"mtime":1614811260058,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1211qm8",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"75"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Header.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/App.js",["151"],"import \"./App.css\";\nimport React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { auth } from \"./Components/Firebase/firebase\";\nimport Home from \"./Components/Home/Home\";\nimport Landing from \"./Components/Home/Landing\";\nimport SignIn from \"./Components/Home/SignIn\";\nimport Reports from \"./Components/Home/Reports\";\nimport { UserContext } from \"./Components/Context/UserProvider\";\n\nfunction App({ history }) {\n  const { setCurrentUserAction, currentUser } = useContext(UserContext);\n  useEffect(() => {\n    // check for user in localStorage\n    let user = JSON.parse(window.localStorage.getItem(\"currentUser\"));\n    setCurrentUserAction(user);\n    // listen for changes like sign out\n    const unsub = auth.onAuthStateChanged(async (user) => {\n      if (!user) {\n        setCurrentUserAction(null);\n      }\n    });\n    // clean up\n    return () => {\n      unsub();\n    };\n  }, [auth]);\n\n  return (\n    <Container className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() => (!currentUser ? <SignIn /> : <Redirect to=\"/home\" />)}\n        />\n        <Route\n          exact\n          path=\"/home\"\n          render={() =>\n            currentUser ? <Home history={history} /> : <Landing />\n          }\n        />\n        <Route\n          exact\n          path=\"/reports\"\n          render={() =>\n            currentUser ? <Reports history={history} /> : <Redirect to=\"/\" />\n          }\n        />\n        <Route path=\"*\" component={Landing} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default withRouter(App);\n// styles\nconst Container = styled.div`\n  /* border: 2px solid blue; */\n`;\n",["152","153"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksList.js",["154","155"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Toolbar.js",["156"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddForm.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Home.js",["157"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SearchStocks.js",["158"],"import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { addStock, deleteStock } from \"../../resources/stockUtilities\";\nimport TransformIcon from \"../Shared/TransformIcon\";\nimport AddMissing from \"./AddMissing\";\nimport { UserContext } from \"../Context/UserProvider\";\nimport { StocksContext } from \"../Context/StocksProvider\";\n\nconst SearchStocks = () => {\n  const [loading, setLoading] = useState(false);\n  const {\n    currentUser,\n    currentUserStocks,\n    setCurrentUserStocksAction,\n  } = useContext(UserContext);\n  const { stocks } = useContext(StocksContext);\n  const [query, setQuery] = useState(\"\");\n  const [tickersArr, setTickersArr] = useState(null);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [alreadyAdded, setAlreadyAdded] = useState(null);\n  const [showAddMissing, setShowAddMissing] = useState(false);\n  const [alreadyAddedIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608509562/Dividend%20Tracker/Icons/SearchResults/check-svgrepo-com_1_g7pyz8.svg\"\n  );\n  const [addToListIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608506065/Dividend%20Tracker/Icons/SearchResults/add-svgrepo-com_gihegx.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n\n  useEffect(() => {\n    // console.log(!!query && filteredResults.length === 0);\n    if (!tickersArr) {\n      buildTickersArr(currentUserStocks);\n    }\n    // set the focus on the input on render\n    document.querySelector(\"#search_input\").focus();\n    filterResults(query);\n    alreadyAddedCheck(query);\n  }, [query, tickersArr]);\n\n  // filter the query through the array of stocks\n  const filterResults = (query) => {\n    let temp = stocks.filter((stock) => {\n      return stock.ticker.toLowerCase() === query.toLowerCase() ? stock : null;\n    });\n    setFilteredResults(temp);\n  };\n  // make ticker array to compare whats been added already\n  const buildTickersArr = (arr) => {\n    setTickersArr(\n      arr.map((stockObj) => {\n        return stockObj.ticker;\n      })\n    );\n  };\n  // adding stock function\n  const handleAddStock = async (user, stock) => {\n    setLoading(true);\n    let timeStampeStock = { ...stock, added: new Date().getTime() };\n    let success = await addStock(user, timeStampeStock);\n    if (success.message === undefined) {\n      setCurrentUserStocksAction(currentUserStocks.concat(stock));\n      setAlreadyAdded(!alreadyAdded);\n      let arr = tickersArr;\n      arr.push(query.toUpperCase());\n      setTickersArr(arr);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n  // determine the icons for whats been added\n  const alreadyAddedCheck = (query) => {\n    if (tickersArr) {\n      setAlreadyAdded(\n        !!tickersArr.some((ticker) => query.toUpperCase() === ticker)\n      );\n    }\n  };\n  // handle unchecking the match aka deleting\n  const handleDelete = async (user, stock) => {\n    setLoading(true);\n    let success = await deleteStock(user, stock);\n    if (success.message === undefined) {\n      console.log(\"success\");\n      setCurrentUserStocksAction(\n        currentUserStocks.filter((stocks) => stocks.ticker !== stock.ticker)\n      );\n      setAlreadyAdded(!alreadyAdded);\n      setTickersArr(\n        tickersArr.filter((ticker) => query.toUpperCase() !== ticker)\n      );\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n\n  return (\n    <Container id={\"searchResults\"} onClick={(e) => e.stopPropagation()}>\n      <h5>Search:</h5>\n      <InputWrapper>\n        <Input\n          autoComplete=\"off\"\n          id=\"search_input\"\n          type=\"text\"\n          placeholder=\"Enter Symbol/Ticker value\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          style={query.length ? { textTransform: \"uppercase\" } : null}\n        />\n        {query.length ? (\n          <span onClick={() => setQuery(\"\")}>&#10005; </span>\n        ) : null}\n      </InputWrapper>\n      <Results>\n        <h4>Results:</h4>\n        {query && query !== \" \" ? (\n          <ResultsWrapper>\n            {filteredResults.slice(0, 100).map((stock, ind) => (\n              <ResultRow key={ind}>\n                <Col width={\"30%\"}>\n                  <label>Ticker</label>\n                  <p>{stock.ticker}</p>\n                </Col>\n                <Col width={\"70%\"}>\n                  <label>Company</label>\n                  <Row>\n                    <p>{stock.name}</p>\n                  </Row>\n                </Col>\n                {loading ? (\n                  <AlreadyAddedLoader>\n                    <img src={littleLoader} alt=\"little loader\" />\n                  </AlreadyAddedLoader>\n                ) : (\n                  <IconsDiv\n                    onClick={() =>\n                      alreadyAdded\n                        ? handleDelete(currentUser.id, stock)\n                        : handleAddStock(currentUser.id, stock)\n                    }\n                  >\n                    <TransformIcon\n                      first={addToListIcon}\n                      second={alreadyAddedIcon}\n                      w1={\"1.5rem\"}\n                      w2={\"1.5rem\"}\n                      transform={alreadyAdded}\n                    />\n                  </IconsDiv>\n                )}\n              </ResultRow>\n            ))}\n          </ResultsWrapper>\n        ) : null}\n        <ResultsWrapper>\n          {filteredResults.length === 0 && query ? (\n            <NoResultRow>\n              {!showAddMissing ? <p>Sorry, no results</p> : null}\n              <div>\n                {!showAddMissing ? (\n                  <AddMissingText onClick={() => setShowAddMissing(true)}>\n                    Need to add a missing stock/fund?\n                  </AddMissingText>\n                ) : (\n                  <span\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      width: \"80%\",\n                    }}\n                  >\n                    <span style={{ color: \"#7249d1\" }}>Add stock:</span>\n                    <span\n                      style={{\n                        width: \"1rem\",\n                        cursor: \"pointer\",\n                        color: \"#FF3501\",\n                      }}\n                      onClick={() => setShowAddMissing(false)}\n                    >\n                      &#10005;\n                    </span>\n                  </span>\n                )}\n              </div>\n              {showAddMissing ? <AddMissing user={currentUser.id} /> : null}\n            </NoResultRow>\n          ) : null}\n        </ResultsWrapper>\n      </Results>\n    </Container>\n  );\n};\n\nexport default SearchStocks;\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 530px;\n  height: 20rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #fff;\n  font-family: \"Exo\", sans-serif;\n  /* border: 1px solid #333; */\n\n  h5 {\n    width: 100%;\n    padding-left: 2rem;\n    font-size: 1rem;\n    /* border: 1px solid red; */\n  }\n`;\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 3rem;\n  padding: 0 0.3rem;\n  margin: 0.5rem 0;\n  border-radius: 3px;\n  border: 2px solid #7249d1;\n\n  span {\n    position: absolute;\n    left: calc(100% - 1.5rem);\n    width: 2rem;\n    color: #ff3501;\n    opacity: 0.7;\n    cursor: pointer;\n    /* border: 1px solid red; */\n  }\n`;\nconst Input = styled.input`\n  &:focus {\n    outline: none;\n    /* outline-color: #7249d1; */\n  }\n  position: relative;\n  width: 220px;\n  padding: 0.4rem;\n  font-size: 17px;\n  border-radius: 3px;\n  font-family: \"Exo\", sans-serif;\n  border: none;\n  /* border: 2px solid #7249d1; */\n`;\nconst Results = styled.div`\n  width: 100%;\n  /* border: 2px solid orange; */\n\n  h4 {\n    padding-top: 1.5rem;\n    margin: 0.4rem 0;\n  }\n`;\nconst ResultsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: scroll;\n  /* border: 1px solid red; */\n`;\nconst ResultRow = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 0 1rem;\n  /* box-shadow: 2px 3px 8px 0 #999; */\n  cursor: default;\n  /* border: 1px solid red; */\n\n  label {\n    height: 1rem;\n    font-size: 0.9rem;\n    text-align: right;\n    padding-right: 1rem;\n    /* border: 2px solid red; */\n  }\n\n  p {\n    font-size: 1.2rem;\n    /* border: 2px solid red; */\n  }\n`;\nconst NoResultRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 0 1rem;\n  cursor: default;\n  /* border: 1px solid red; */\n\n  p {\n    font-size: 1.2rem;\n    /* border: 2px solid red; */\n  }\n`;\nconst AddMissingText = styled.span`\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n  color: #7249d1;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  width: ${(props) => props.width};\n  /* border: 1px solid green; */\n`;\nconst IconsDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  /* border: 1px solid red; */\n`;\nconst AlreadyAddedLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  animation: spin_already_added_loader 1s linear forwards infinite;\n  /* border: 1px solid red; */\n\n  img {\n    width: 1.5rem;\n  }\n\n  @keyframes spin_already_added_loader {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/stockUtilities.js",["159"],"import { firestore } from \"../Components/Firebase/firebase\";\nimport axios from \"axios\";\nimport { nas } from \"../resources/nyseOBJ\";\n\nexport const updateStocks = () => {\n  // let ref = firestore.collection(\"symbols\");\n  // ref\n  //   .get()\n  //   .then((data) => {\n  //     return data.docs.map((doc) => {\n  //       return doc.data();\n  //     });\n  //   })\n  //   .then((obj) => {\n  //     // console.log(obj[0].symbols);\n  //     let nyse = obj[0].symbols.map((stock) => {\n  //       return {\n  //         name: stock[\"Company Name\"],\n  //         ticker: stock[\"ACT Symbol\"],\n  //       };\n  //     });\n  //     let adjusted = nas.map((stock) => {\n  //       return {\n  //         name: stock[\"Company Name\"],\n  //         ticker: stock[\"Symbol\"],\n  //       };\n  //     });\n  // console.log(adjusted.concat(nyse));\n  // ref.doc().set({\n  //   symbols: adjusted.concat(nyse),\n  // });\n  // });\n  // ref.doc().set({\n  // })\n};\nconst addZero = (i) => {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n};\nexport const makeTodaysDate = () => {\n  const now = new Date();\n  let year = now.getFullYear();\n  let month = addZero(now.getMonth() + 1);\n  let day = now.getDate();\n  return `${year}-${month}-${day}`;\n};\n// format data to month * day * year\nexport const formatDateData = (data) => {\n  if (data === \"No data\" || data === \"None\") {\n    return \"No Data\";\n  }\n  let year = data.slice(2, 4);\n  let month = data.slice(5, 7);\n  let day = data.slice(8, 10);\n\n  // console.log(data, year, month, day);\n  return `${month}/${day}/${year}`;\n};\n\n// get the users added stocks\nexport const getUserStocks = async (userID) => {\n  let ref = firestore.doc(`users/${userID}`);\n\n  let arr = await ref.get().then((data) => {\n    return data.data().stocks;\n  });\n  return arr;\n};\n\n// API calls to get data for requested stock\nexport const getTickerInfo = async (ticker, timeInterval) => {\n  // intervals options: 1, 5, 15, 30, 60\n  let interval = timeInterval;\n  let api_KEY = \"3M8136KILLJ20M9K\";\n  // let currentInfo = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=${api_KEY}`;\n  let currentInfo = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${ticker}&interval=${interval}min&apikey=${api_KEY}`;\n  let overview = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker}&apikey=${api_KEY}`;\n  // OVERVIEW API CALL\n  let overviewData = await axios\n    .get(overview)\n    .then((data) => {\n      if (data.data.Note) {\n        return {\n          yield: \"No data\",\n          divPerShare: \"No data\",\n          exDivDate: \"No data\",\n          payDivDate: \"No data\",\n        };\n      } else {\n        // console.log(\"All data\", data);\n        const {\n          DividendYield,\n          DividendPerShare,\n          DividendDate,\n          ExDividendDate,\n        } = data.data;\n\n        return {\n          ticker: ticker,\n          yield: DividendYield,\n          divPerShare: DividendPerShare,\n          exDivDate: ExDividendDate,\n          payDivDate: DividendDate,\n        };\n      }\n    })\n    .catch((err) => {\n      console.log(\"There was a problem getting the data\", err.message);\n      return {\n        yield: \"No data\",\n        divPerShare: \"No data\",\n        exDivDate: \"No data\",\n        payDivDate: \"No data\",\n      };\n    });\n  // TIME SERIES API CALL\n  let seriesData = await axios\n    .get(currentInfo)\n    .then((data) => {\n      console.log(data);\n      if (data.data.Note) {\n        console.log(\"Timeout occurred\");\n        return {\n          yield: \"No data\",\n          divPerShare: \"No data\",\n          exDivDate: \"No data\",\n          payDivDate: \"No data\",\n        };\n      }\n      let time_series_arr = Object.entries(\n        data.data[`Time Series (${interval}min)`]\n      );\n      // let time_series_arr = Object.entries(data.data[\"Time Series (Daily)\"]);\n      let obj = time_series_arr.map((arr) => {\n        return {\n          lastUpdated: arr[0],\n          value: \"$\" + arr[1][\"4. close\"].slice(0, -2),\n        };\n      });\n      return {\n        ...obj,\n        value: obj[0].value,\n      };\n    })\n    .catch((err) => {\n      console.log(\n        \"There was a problem getting the interval data,\",\n        err.message\n      );\n      return {\n        lastUpdated: \"No Data\",\n        value: \"Data Not Available\",\n      };\n    });\n  console.log({\n    ...overviewData,\n    timeDate: seriesData,\n    value: seriesData.value,\n  });\n  return {\n    ...overviewData,\n    timeDate: seriesData,\n    value: seriesData.value,\n  };\n};\n\n// add stock to users stock list\nexport const addStock = async (userID, stock) => {\n  let ref = firestore.doc(`users/${userID}`);\n  let currentUserObj = await ref.get().then((data) => data.data());\n\n  let updatedStocksArray = await ref\n    .get()\n    .then((data) => {\n      let newArr = [stock];\n      data.data().stocks.forEach((s) => {\n        if (s.ticker === stock.ticker) {\n          alert(\"Stock already exists in your list\");\n          return;\n        } else {\n          newArr.push(s);\n        }\n      });\n      return newArr;\n    })\n    .catch((err) => {\n      return {\n        message: err.message,\n      };\n    });\n  // take current user object and update the stocks array property\n  let updatedObj = {\n    ...currentUserObj,\n    stocks: updatedStocksArray,\n  };\n  // console.log(updatedStocksArray);\n  // console.log(updatedObj);\n  // update the user's stocks\n  ref.set({\n    ...updatedObj,\n  });\n\n  return updatedStocksArray;\n};\n// delete stock from users list of stocks\nexport const deleteStock = async (userID, stock) => {\n  let ref = firestore.doc(`users/${userID}`);\n  let currentUserObj = await ref.get().then((data) => data.data());\n  let updatedStocksArray = await ref\n    .get()\n    .then((data) => {\n      return data.data().stocks.filter((s) => {\n        return s.ticker !== stock.ticker;\n      });\n    })\n    .catch((err) => {\n      return {\n        message: err.message,\n      };\n    });\n  // take current user object and update the stocks array property\n  let updatedObj = { ...currentUserObj, stocks: updatedStocksArray };\n  // console.log(updatedStocksArray);\n  // console.log(updatedObj);\n  // update the user's stocks\n  ref.set({\n    ...updatedObj,\n  });\n  return updatedStocksArray;\n};\n\nexport const updateStockDividend = async (userID, stock, payout) => {\n  let ref = firestore.doc(`users/${userID}`);\n  let currentUserObj = await ref.get().then((data) => data.data());\n  let updatedStockArr = await ref\n    .get()\n    .then((data) => {\n      return data.data().stocks.map((s) => {\n        return s.ticker === stock.ticker\n          ? {\n              ...s,\n              payouts: payout.sort((a, b) => (a.payDate < b.payDate ? 1 : -1)), //sort chonologically by date decending\n            }\n          : s;\n      });\n    })\n    .catch((err) => {\n      return {\n        message: err.message,\n      };\n    });\n  // console.log(currentUserObj);\n  // console.log(updatedStockArr);\n  let updatedObj = { ...currentUserObj, stocks: updatedStockArr };\n\n  ref.set({\n    ...updatedObj,\n  });\n  console.log(\n    \"from utilities--UpdateStocksDividens new payout added: \",\n    updatedStockArr\n  );\n  return updatedStockArr;\n};\n\n// get the dividends history\nexport const getStockDividends = async (userID, stock) => {\n  let ref = firestore.doc(`users/${userID}`);\n  let updatedStockArr = await ref\n    .get()\n    .then((data) => {\n      return data.data().stocks.filter((s) => {\n        return s.ticker === stock.ticker;\n      });\n    })\n    .then((data) => {\n      // console.log(data[0].payouts);\n      return data[0].payouts;\n    })\n    .catch((err) => {\n      console.log(err);\n      return {\n        message: err.message,\n      };\n    });\n  console.log(\"from utilities--GETStockDividend:\", updatedStockArr);\n  return updatedStockArr;\n};\n\n// delete incorrectly entered dividends\nexport const deleteDividend = async (userID, stock, id) => {\n  let ref = firestore.doc(`users/${userID}`);\n  let updatedStockArr = await ref\n    .get()\n    .then((data) => {\n      return data.data().stocks.filter((s) => {\n        return s.ticker === stock.ticker;\n      });\n    })\n    .then((data) => {\n      // console.log(data[0].payouts[index]);\n      return data[0].payouts.filter((pay) => pay.created !== id);\n      // return data[0].payouts;\n    })\n    .catch((err) => {\n      console.log(err);\n      return {\n        message: err.message,\n      };\n    });\n  console.log(\"From utilities-- deleted stocks new array\", updatedStockArr);\n  return updatedStockArr;\n};\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/nyseOBJ.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Landing.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SignIn.js",["160","161"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Buttons/GoogleSignInButton.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Register.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Firebase/firebase.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksWrapper.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Drawer.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StockToolbar.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/index.js",["162"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport StocksProvider from \"./Components/Context/StocksProvider\";\nimport UserProvider from \"./Components/Context/UserProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <StocksProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </StocksProvider>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/LoadingIcon.js",["163","164","165"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst LoadingIcon = ({ height, big, visibiliy, marginTop }) => {\n  const [spinnerIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608524427/Dividend%20Tracker/Icons/cube-svgrepo-com_hiothk.svg\"\n  );\n\n  // <LoaderSmall visibiliy={visibiliy} />\n  return (\n    <div>\n      {big ? (\n        <Loader>\n          <Wrapper height={height}>\n            <Spinner bg=\"red\" height=\"35%\" aniName=\"height1\" delay=\"0.2s\" />\n            <Spinner bg=\"blue\" height=\"80%\" aniName=\"height2\" delay=\"0.4s\" />\n            <Spinner bg=\"green\" height=\"20%\" aniName=\"height3\" delay=\"0.6s\" />\n            <Spinner bg=\"purple\" height=\"70%\" aniName=\"height4\" delay=\"0.8s\" />\n            <Spinner bg=\"orange\" height=\"50%\" aniName=\"height5\" delay=\"1s\" />\n          </Wrapper>\n        </Loader>\n      ) : (\n        <Wrapper visibiliy={visibiliy} height={height} marginTop={marginTop}>\n          <Spinner bg=\"red\" height=\"35%\" aniName=\"height1\" delay=\"0.2s\" />\n          <Spinner bg=\"blue\" height=\"80%\" aniName=\"height2\" delay=\"0.4s\" />\n          <Spinner bg=\"green\" height=\"20%\" aniName=\"height3\" delay=\"0.6s\" />\n          <Spinner bg=\"purple\" height=\"70%\" aniName=\"height4\" delay=\"0.8s\" />\n          <Spinner bg=\"orange\" height=\"50%\" aniName=\"height5\" delay=\"1s\" />\n        </Wrapper>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingIcon;\n\n// styels\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Wrapper = styled.div`\n  height: ${(props) => props.height};\n  width: 9rem;\n  transform: rotate(180deg);\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: ${(props) => props.marginTop};\n  visibility: ${(props) => props.visibiliy};\n  border-top: 4px solid #999;\n  /* border: 1px solid red; */\n`;\nconst Spinner = styled.div`\n  width: 30px;\n  height: ${(props) => props.height};\n  background-color: ${(props) => props.bg};\n  animation: 0.5s alternate infinite forwards;\n  animation-name: ${(props) => props.aniName};\n  /* animation-delay: ${(props) => props.delay}; */\n  /* border: 1px solid red; */\n\n  @keyframes height1 {\n    to {\n      height: 20%;\n    }\n  }\n\n  @keyframes height2 {\n    to {\n      height: 90%;\n    }\n  }\n  @keyframes height3 {\n    to {\n      height: 60%;\n    }\n  }\n  @keyframes height4 {\n    to {\n      height: 30%;\n    }\n  }\n  @keyframes height5 {\n    to {\n      height: 100%;\n    }\n  }\n`;\nconst LoaderSmall = styled.div`\n  position: absolute;\n  top: calc(50% - 15px);\n  left: calc(50% - 15px);\n  height: 30px;\n  width: 30px;\n  opacity: 1;\n  visibility: ${(props) => props.visibiliy};\n  animation: rotate_drawer_loader 0.5s ease-in infinite alternate;\n  animation-delay: ${(props) => props.delay};\n  border-radius: 50%;\n  border: 3px solid red;\n  border-top-color: blue;\n\n  @keyframes rotate_drawer_loader {\n    to {\n      border-radius: 0%;\n      transform: rotate(408deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/mediaquery.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/TransformIcon.js",["166"],"import React, { useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst TransformIcon = ({ first, second, transform, w1, w2 }) => {\n  useEffect(() => {\n    // console.log(transform);\n  }, [transform]);\n\n  return (\n    <Container>\n      {transform ? (\n        <Second width={w2}>\n          <img src={second} alt=\"second\" />\n        </Second>\n      ) : (\n        <First width={w1}>\n          <img src={first} alt=\"first\" />\n        </First>\n      )}\n    </Container>\n  );\n};\n\nexport default TransformIcon;\n\n// styles\nconst ImageDiv = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${(props) => props.width};\n\n  img {\n    width: 100%;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border: 1px solid red; */\n`;\nconst First = styled.div`\n  ${ImageDiv}\n  transform: scale(1);\n  opacity: 1;\n  animation: whirl_image_out 0.3s forwards;\n\n  @keyframes whirl_image_out {\n    from {\n      transform: scale(0.1);\n      opacity: 0;\n    }\n  }\n`;\nconst Second = styled.div`\n  ${ImageDiv}\n  opacity: 0;\n  transform: scale(0.1);\n  animation: whirl_image_in 0.3s forwards;\n\n  @keyframes whirl_image_in {\n    to {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/DividendsForm.js",["167"],"import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport {\n  updateStockDividend,\n  deleteDividend,\n  formatDateData,\n  makeTodaysDate,\n} from \"../../resources/stockUtilities\";\nimport { StocksContext } from \"../Context/StocksProvider\";\nimport { UserContext } from \"../Context/UserProvider\";\n\nconst DividendsForm = ({ stock }) => {\n  const {\n    currentUser,\n    currentUserStocks,\n    setCurrentUserStocksAction,\n  } = useContext(UserContext);\n  const { showAllDivsAction } = useContext(StocksContext);\n  const [amount, setAmount] = useState(0);\n  const [payDate, setPayDate] = useState(makeTodaysDate());\n  const [stockPayouts, setStockPayouts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [deleteIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608651426/Dividend%20Tracker/Icons/Stock%20Toolbar/delete-folder-hand-drawn-outline-svgrepo-com_rjmcgy.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n  const [openModalIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1609038418/Dividend%20Tracker/Icons/Stock%20Toolbar/share-arrows-svgrepo-com_npdvvm.svg\"\n  );\n\n  useEffect(() => {\n    // set the stockPayouts variable\n    setStockPayouts(\n      currentUserStocks.filter((s) => s.ticker === stock.ticker)[0].payouts ||\n        []\n    );\n    // populate the total in the history header\n    if (stockPayouts.length) {\n      getTotal();\n    }\n  }, [currentUserStocks]);\n\n  // handle recording the dividend\n  const handleSubmit = async () => {\n    if (amount && payDate) {\n      setLoading(true);\n      // if they don't have any payout yet make an empty array\n      let payoutObj = {\n        amount: amount,\n        payDate: payDate,\n        created: new Date().getTime(),\n      };\n      // console.log(stock.payouts);\n      let success = await updateStockDividend(\n        currentUser.id,\n        stock,\n        stockPayouts.concat(payoutObj)\n      );\n      // console.log(\"updatestockdiv--return\", success);\n      if (success.message === undefined) {\n        setCurrentUserStocksAction(success);\n        setAmount(0);\n        setPayDate(makeTodaysDate());\n        setLoading(false);\n      } else {\n        console.log(\"There was an error.\");\n        return {\n          message: success.message,\n        };\n      }\n    }\n  };\n\n  // handle delete\n  const handleDelete = async (createdID) => {\n    setLoading(true);\n    let newDividends = await deleteDividend(currentUser.id, stock, createdID);\n    console.log(newDividends);\n    let success = await updateStockDividend(\n      currentUser.id,\n      stock,\n      newDividends\n    );\n    if (success.message === undefined) {\n      setCurrentUserStocksAction(success);\n      setLoading(false);\n    } else {\n      console.log(\"There was an error.\");\n      return {\n        message: success.message,\n      };\n    }\n  };\n  // convert to comma notation\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  // generate total for history header\n  const getTotal = () => {\n    let acc = 0;\n    if (stockPayouts.length) {\n      stockPayouts.map((val) => {\n        return (acc += parseFloat(val.amount));\n      });\n      return numberWithCommas(acc.toFixed(2));\n    }\n  };\n\n  return (\n    <Container>\n      <AmountAndDate>\n        <Amount>\n          <label>Amount:</label>\n          <div>\n            <span>&#36;</span>\n            <input\n              id=\"amount_input\"\n              autoFocus={window.innerWidth > 580 ? true : null}\n              type=\"number\"\n              min=\"0\"\n              step=\"0.01\"\n              default=\"0.00\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  handleSubmit();\n                }\n              }}\n            />\n          </div>\n        </Amount>\n        <DateWrapper>\n          <div>\n            <label>Date:</label>\n            <input\n              id=\"payDate_input\"\n              type=\"date\"\n              value={payDate}\n              onChange={(e) => setPayDate(e.target.value)}\n            />\n          </div>\n        </DateWrapper>\n        <SubmitDividend\n          onClick={() => handleSubmit()}\n          pointer={\n            loading || !(payDate && amount > 0) ? \"not-allowed\" : \"pointer\"\n          }\n          disabled={loading || !(amount && payDate)}\n        >\n          {loading ? <img src={littleLoader} alt=\"loading\" /> : \"Enter\"}\n        </SubmitDividend>\n      </AmountAndDate>\n      <History\n        opacity={loading ? \"0.5\" : null}\n        p_events={loading ? \"none\" : null}\n      >\n        <HistoryHeader>\n          <HistoryHeaderWrapper>\n            <h6>History:</h6>\n            <div\n              onClick={() => {\n                showAllDivsAction({\n                  show: true,\n                  payouts: stockPayouts,\n                  stock: stock,\n                });\n              }}\n            >\n              View All\n              {stockPayouts && stockPayouts.length > 4\n                ? ` (${stockPayouts.length})`\n                : null}\n              <img src={openModalIcon} alt=\"view all\" width=\"18px\" />\n            </div>\n            <p>\n              <span>Total:</span>\n              {stockPayouts ? (\n                <span>{stockPayouts.length ? `$${getTotal()}` : \"$0\"}</span>\n              ) : (\n                \"$0\"\n              )}\n            </p>\n          </HistoryHeaderWrapper>\n        </HistoryHeader>\n        {stockPayouts ? (\n          <HistoryWrapper>\n            {stockPayouts.slice(0, 4).map((pay, ind) => (\n              <HistoryLine key={ind}>\n                <span>{ind + 1}</span>\n                <InfoWrapper>\n                  <p>${numberWithCommas(parseFloat(pay.amount).toFixed(2))}</p>\n                  <span>{formatDateData(pay.payDate)}</span>\n                  <DeleteDividend>\n                    <img\n                      src={deleteIcon}\n                      alt=\"delete dividend\"\n                      onClick={() => handleDelete(pay.created)}\n                    />\n                  </DeleteDividend>\n                </InfoWrapper>\n              </HistoryLine>\n            ))}\n          </HistoryWrapper>\n        ) : null}\n        {loading ? <DivLoader src={littleLoader} alt=\"loading\" /> : null}\n      </History>\n    </Container>\n  );\n};\n\nexport default DividendsForm;\n\n// styles\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  width: 100%;\n  /* border: 1px solid red; */\n\n  label {\n    font-size: 0.8rem;\n    color: #777;\n  }\n\n  input {\n    width: 100%;\n    height: 1.5rem;\n    font-size: 0.9rem;\n    border: none;\n    outline: none;\n  }\n\n  input[type=\"number\"] {\n    padding-left: 0.2rem;\n    max-width: 100px;\n    /* border: 1px solid orange; */\n  }\n\n  @media ${device.tabletS} {\n    input {\n      font-size: 1.2rem;\n    }\n  }\n`;\nconst AmountAndDate = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 0.2rem 0.5rem;\n  font-size: 0.8rem;\n  background-color: #fff;\n  border-bottom: 2px solid #7249d1;\n  /* border: 1px solid blue; */\n\n  @media ${device.tabletS} {\n    justify-content: flex-start;\n  }\n`;\nconst Amount = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 3rem;\n  margin-right: 1rem;\n  /* border: 1px solid red; */\n\n  span {\n    font-size: 1rem;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n  @media ${device.tabletS} {\n    width: 6rem;\n  }\n`;\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 10rem;\n  overflow: hidden;\n  /* border: 1px solid red; */\n\n  @media ${device.tabletS} {\n    margin-left: 2rem;\n  }\n`;\nconst SubmitDividend = styled.button`\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background-color: #27d67b;\n    color: #fff;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #27d67b;\n  min-height: 2.5rem;\n  min-width: 2.5rem;\n  margin-left: 1rem;\n  cursor: ${(props) => props.pointer};\n  transition-duration: 0.2s;\n  pointer-events: ${(props) => props.p_events};\n  border-radius: 50%;\n  background-color: #fff;\n  border: 2px solid #27d67b;\n  /* border: 2px solid red; */\n\n  img {\n    width: 1rem;\n    animation: spin_littleloader_in_dividend_submit 1s forwards linear infinite;\n\n    @keyframes spin_littleloader_in_dividend_submit {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  }\n\n  @media ${device.tabletS} {\n    min-height: 2rem;\n    width: 7rem;\n    margin-left: auto;\n    border-radius: 20px;\n  }\n`;\nconst History = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  opacity: ${(props) => props.opacity};\n  pointer-events: ${(props) => props.p_events};\n  /* border: 1px solid red; */\n`;\nconst DivLoader = styled.img`\n  position: absolute;\n  top: 50%;\n  left: calc(50% - 1rem);\n  width: 2rem;\n  animation: spin_div_loader 1s linear infinite;\n\n  @keyframes spin_div_loader {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\nconst HistoryHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst HistoryHeaderWrapper = styled.div`\n  width: 100%;\n  font-size: 0.9rem;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.3rem;\n  color: #fff;\n  background-color: #7249d1;\n  /* border: 1px solid red; */\n\n  h6 {\n    display: none;\n    font-size: 0.9rem;\n    padding: 0.1rem 0 0 0.2rem;\n    /* border: 1px solid red; */\n\n    @media ${device.mobileM} {\n      display: initial;\n    }\n  }\n\n  div {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* border: 1px solid red; */\n\n    img {\n      margin-left: 0.4rem;\n    }\n  }\n\n  p {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    /* border: 1px solid red; */\n\n    span:first-of-type {\n      color: #fff;\n      margin-right: 0.5rem;\n    }\n    span {\n      color: #27d67b;\n    }\n  }\n`;\nconst HistoryWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  /* border: 1px solid green; */\n\n  @media ${device.tabletS} {\n    padding: 0.2rem 0;\n    flex-direction: row;\n    justify-content: space-between;\n    height: fit-content;\n  }\n`;\nconst HistoryLine = styled.div`\n  position: relative;\n  width: 50%;\n  width: 100%;\n  margin-top: 0.1rem;\n  padding: 0 0.2rem;\n  border: 1px solid #333;\n  /* border: 1px solid red; */\n\n  span:first-of-type {\n    position: absolute;\n    left: 0.1rem;\n    color: #333;\n    font-size: 0.5rem;\n  }\n\n  @media ${device.tabletS} {\n    width: 48%;\n    padding: 0 0.5rem;\n  }\n`;\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-left: 0.5rem;\n  font-size: 0.8rem;\n  /* border: 1px solid blue; */\n\n  p {\n    color: #27d67b;\n  }\n\n  span:first-of-type {\n    font-size: 0.8rem;\n    position: static;\n    color: #999;\n    margin-left: 0.3rem;\n  }\n\n  @media ${device.tabletS} {\n    font-size: 1rem;\n\n    span:first-of-type {\n      font-size: 1rem;\n    }\n  }\n`;\nconst DeleteDividend = styled.div`\n  display: flex;\n  align-items: center;\n  /* border: 1px solid red; */\n\n  img {\n    width: 1.2rem;\n    cursor: pointer;\n\n    @media ${device.tabletS} {\n      width: 1.5rem;\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ViewAll.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Footer.js",["168"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      Developed by:\n      <a\n        href=\"https://hungry-saha-ad752d.netlify.app/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Jonathan Cooper\n      </a>\n    </Container>\n  );\n};\n\nexport default Footer;\n\n// styled\nconst Container = styled.div`\n  height: 10rem;\n  background-color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.6rem;\n  color: #fff;\n\n  a {\n    color: #fff;\n    margin-left: 1rem;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddMissing.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/D3Graph.js",["169","170"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport * as d3 from \"d3\";\n\nconst D3Graph = ({ arr, stock }) => {\n  const [valueArr, setValueArr] = useState(null);\n  const [infoValues, setInfoValues] = useState(null);\n\n  useEffect(() => {\n    // console.log(arr);\n    if (!valueArr && !infoValues) {\n      makeValuesArray(arr);\n      makeInfoValues(arr);\n    } else {\n      drawChart(\"100%\", 100);\n    }\n    //   console.log(\"we running\");\n  }, [valueArr, infoValues]);\n\n  // make a values array from the time series data\n  const makeValuesArray = (obj) => {\n    let arr = Object.entries(obj);\n    let values = arr\n      .slice(0, 100)\n      .reverse()\n      .map((val) => {\n        return val[1].value ? parseFloat(val[1].value.slice(1)) : null;\n      });\n    setValueArr(values.reverse());\n  };\n  // get first middle and last values for the infobar\n  const makeInfoValues = (obj) => {\n    let arr = Object.entries(obj).reverse();\n    // console.log(arr);\n    // console.log(arr.reverse());\n    if (arr[0][1] === \"Data Not Available\") {\n      return;\n    } else {\n      setInfoValues([\n        formatInfo(arr[1][1].lastUpdated),\n        formatInfo(arr[50][1].lastUpdated),\n        formatInfo(arr[100][1].lastUpdated),\n      ]);\n    }\n  };\n\n  // format the info data\n  const formatInfo = (info) => {\n    let date = (info) => {\n      return info ? info.slice(5, 10).replace(\"-\", \"/\") : null;\n    };\n    let time = (info) => {\n      if (info) {\n        let rawTime = info.slice(11, -6);\n        return rawTime > 12 ? rawTime - 12 + \"pm\" : parseInt(rawTime) + \"am\";\n      }\n    };\n\n    return date(info) + \" \" + time(info);\n  };\n  // average for baseline value\n  const average = (array) => array.reduce((a, b) => a + b) / array.length;\n\n  // get the highest value\n  const getHigh = (array) => array.reduce((a, b) => (a > b ? a : b));\n\n  // get correct cents\n  const getCents = (num) => {\n    if (num && num.toString().includes(\".\")) {\n      return num.toString().slice(-2).includes(\".\")\n        ? (num.toString() + 0).slice(-2)\n        : num.toString().slice(-2);\n    } else {\n      return \"00\";\n    }\n  };\n  // D3 FUNC\n  const drawChart = (w, h) => {\n    // const data = [70, 55, 80, 95, 40, 80];\n    const data = valueArr;\n    const baseLine = data ? data : [100];\n    const dbase = average(baseLine) * 2;\n    // make the svg element\n    const svg = d3\n      .select(`#${stock.ticker}`)\n      .append(\"svg\")\n      .attr(\"width\", w)\n      .attr(\"height\", h);\n    // select all rect elements pass the data and\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .transition()\n      .delay((d, i) => `${i}8`)\n      .duration(800)\n      .attr(\"x\", (d, i) => `${i}%`)\n      .attr(\"y\", (d, i) => 0)\n      .attr(\"width\", \"3px\")\n      .attr(\"height\", (d) => {\n        let cents = getCents(d);\n\n        // console.log(\n        //   (\"The D:\", d, \"DBASE:\", dbase, \"PERCENT:\", cents / dbase) * 100\n        // );\n\n        return (d / dbase) * 100;\n      })\n      .attr(\"fill\", (d) => (d >= dbase / 2 ? \"#27d67b\" : \"#FF3501\"));\n\n    // 38/230 = .165 .165 x 100 = 16.5\n  };\n\n  return (\n    <Container id={`${stock.ticker}`}>\n      <Legend>\n        Market Value <span>(last 7 trading days)</span>\n      </Legend>\n      <LeftInfoBar>\n        <span>0</span>\n        {valueArr ? <span>${average(valueArr).toFixed(2)}</span> : null}\n        {valueArr ? <span>${getHigh(valueArr) / 0.5}</span> : null}\n      </LeftInfoBar>\n      {infoValues ? (\n        <BottomInfoBar>\n          {infoValues.map((i, ind) => (\n            <span key={ind}>{i}</span>\n          ))}\n        </BottomInfoBar>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default D3Graph;\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0 0.1rem;\n  /* overflow: hidden; */\n  transform: scale(-1, -1);\n  background-color: #fff;\n  border-top: 2px solid #7249d1;\n  border-right: 2px solid #7249d1;\n  /* border: 1px solid red; */\n`;\nconst Legend = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 2rem;\n  font-size: 0.8rem;\n  text-align: center;\n  top: calc(100% - 2rem);\n  left: calc(50% - 25%);\n  transform: rotate(180deg);\n  /* border: 1px solid gray; */\n\n  span {\n    display: none;\n\n    @media ${device.tabletS} {\n      display: initial;\n    }\n  }\n`;\nconst LeftInfoBar = styled.div`\n  position: absolute;\n  top: -0.5rem;\n  left: 100%;\n  width: 1rem;\n  height: 110%;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n  align-items: center;\n  transform: rotate(180deg);\n  /* border: 1px solid blue; */\n\n  span {\n    font-size: 0.6rem;\n    padding-right: 0.1rem;\n    background-color: #fff;\n  }\n\n  span:nth-child(2) {\n    margin-bottom: 1rem;\n  }\n`;\nconst BottomInfoBar = styled.div`\n  position: absolute;\n  top: -1rem;\n  left: 0;\n  width: 100%;\n  height: 1rem;\n  font-size: 0.6rem;\n  padding-top: 0.5rem;\n  display: none;\n  justify-content: space-between;\n  transform: rotate(180deg);\n  /* border: 1px solid red; */\n\n  span {\n    transform: rotate(-15deg);\n    /* background-color: #fff; */\n  }\n\n  @media ${device.tabletS} {\n    display: flex;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Reports.js",["171","172","173","174"],"import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport D3Graph from \"../Shared/D3Graph\";\nimport { UserContext } from \"../Context/UserProvider\";\nimport { StocksContext } from \"../Context/StocksProvider\";\nimport HowManyStocks from \"./ReportComponents/HowManyStocks\";\nimport MostDividends from \"./ReportComponents/MostDividends\";\n\nconst Reports = ({ history }) => {\n  const { currentUserStocks, currentUser } = useContext(UserContext);\n  const { showAllDivsAction, tickerData } = useContext(StocksContext);\n  const [printing, setPrinting] = useState(false);\n\n  // way to hide the print and go back bar while printing\n  const handlePrint = () => {\n    setPrinting(true);\n    setTimeout(() => {\n      window.print();\n      setPrinting(false);\n    }, 1000);\n  };\n\n  return (\n    <Container>\n      {printing ? null : (\n        <Header>\n          <Return onClick={() => history.push(\"/home\")}>Go Back</Return>\n          <PrintButton onClick={() => handlePrint()}>Print Report</PrintButton>\n        </Header>\n      )}\n      <h1>Analysis Report:</h1>\n      <Wrapper>\n        <ReportWrapper>\n          <HowManyStocks stocks={currentUserStocks} />\n          <MostDividends stocks={currentUserStocks} />\n        </ReportWrapper>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default withRouter(Reports);\n\n// styles\n\nconst Container = styled.div`\n  min-height: 100vh;\n\n  h1 {\n    color: #fff;\n    padding: 1.5rem 0;\n    background-color: #333;\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.6rem;\n  background-color: #333;\n`;\nconst Return = styled.div`\n  width: 5rem;\n  font-size: 1.2rem;\n  color: #7249d1;\n  color: #fff;\n  cursor: pointer;\n  font-family: \"Exo\", sans-serif;\n`;\nconst PrintButton = styled.button`\n  width: 6rem;\n  height: 3rem;\n  cursor: pointer;\n  font-weight: 400;\n  font-family: \"Exo\", sans-serif;\n  border-radius: 5px;\n  background-color: #27d67b;\n  outline: none;\n  border: none;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 1rem;\n`;\nconst ReportWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/HowManyStocks.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/reportWebVitals.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/StocksProvider.js",["175"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/UserProvider.js",["176","177"],"import React, { useState, useEffect, createContext } from \"react\";\nimport { firestore, auth } from \"../Firebase/firebase\";\n\nexport const UserContext = createContext({\n  currentUser: null,\n  currentUserStocks: [],\n  setCurrentUserAction: () => {},\n});\n\n// PROVIDER\nconst UserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentUserStocks, setCurrentUserStocks] = useState([]);\n  const setCurrentUserAction = (user) => setCurrentUser(user);\n  const setCurrentUserStocksAction = (stocks) => setCurrentUserStocks(stocks);\n\n  useEffect(() => {\n    if (!currentUser) {\n      window.localStorage.setItem(\"currentUser\", null);\n    } else {\n      window.localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n    }\n  }, [currentUser]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        currentUser,\n        currentUserStocks,\n        setCurrentUserAction,\n        setCurrentUserStocksAction,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/ErrorComponent.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/MostDividends.js",["178"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MostDividends = ({ stocks }) => {\n  const [topStocks, setTopStocks] = useState(null);\n\n  useEffect(() => {\n    if (!topStocks) {\n      getMostDividends(stocks);\n    }\n    console.log(topStocks);\n  }, [topStocks]);\n\n  const getMostDividends = (arr) => {\n    let amountsArr = arr.map((s) => {\n      if (s.payouts) {\n        return { ...s, total: getTotal(s.payouts) };\n      } else {\n        return { ...s, total: 0 };\n      }\n    });\n    setTopStocks(amountsArr.sort((a, b) => (a.total < b.total ? 1 : -1)));\n  };\n\n  // generate total for dividend sorts\n  const getTotal = (divsArr) => {\n    let total = 0;\n    divsArr.forEach((payout) => {\n      let amount = parseFloat(payout.amount);\n      total += amount;\n    });\n    return total;\n  };\n\n  return (\n    <Container>\n      {topStocks ? (\n        <div>\n          <p>Your top paying stocks:</p>\n          <ul>\n            {topStocks.slice(0, 3).map((stock) => (\n              <li key={stock.ticker}>{stock.name}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        \"You have no dividend payouts to track yet.\"\n      )}\n    </Container>\n  );\n};\n\nexport default MostDividends;\n\n// styles\nconst Container = styled.section`\n  padding: 1rem;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/UtilitiesRow.js",["179"],{"ruleId":"180","severity":1,"message":"181","line":28,"column":6,"nodeType":"182","endLine":28,"endColumn":12,"suggestions":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"192","line":37,"column":6,"nodeType":"182","endLine":37,"endColumn":13,"suggestions":"193"},{"ruleId":"180","severity":1,"message":"194","line":25,"column":6,"nodeType":"182","endLine":25,"endColumn":49,"suggestions":"195"},{"ruleId":"180","severity":1,"message":"196","line":29,"column":6,"nodeType":"182","endLine":29,"endColumn":28,"suggestions":"197"},{"ruleId":"180","severity":1,"message":"198","line":41,"column":6,"nodeType":"182","endLine":41,"endColumn":25,"suggestions":"199"},{"ruleId":"188","severity":1,"message":"200","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":13},{"ruleId":"188","severity":1,"message":"201","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":26},{"ruleId":"188","severity":1,"message":"202","line":34,"column":11,"nodeType":"190","messageId":"191","endLine":34,"endColumn":18},{"ruleId":"188","severity":1,"message":"203","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"188","severity":1,"message":"204","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":21},{"ruleId":"188","severity":1,"message":"205","line":98,"column":7,"nodeType":"190","messageId":"191","endLine":98,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"206","line":44,"column":6,"nodeType":"182","endLine":44,"endColumn":25,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"208","line":19,"column":6,"nodeType":"182","endLine":19,"endColumn":28,"suggestions":"209"},{"ruleId":"188","severity":1,"message":"210","line":103,"column":13,"nodeType":"190","messageId":"191","endLine":103,"endColumn":18},{"ruleId":"188","severity":1,"message":"211","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":15},{"ruleId":"188","severity":1,"message":"212","line":11,"column":30,"nodeType":"190","messageId":"191","endLine":11,"endColumn":41},{"ruleId":"188","severity":1,"message":"213","line":12,"column":11,"nodeType":"190","messageId":"191","endLine":12,"endColumn":28},{"ruleId":"188","severity":1,"message":"214","line":12,"column":30,"nodeType":"190","messageId":"191","endLine":12,"endColumn":40},{"ruleId":"188","severity":1,"message":"215","line":38,"column":11,"nodeType":"190","messageId":"191","endLine":38,"endColumn":14},{"ruleId":"188","severity":1,"message":"216","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":19},{"ruleId":"188","severity":1,"message":"217","line":2,"column":21,"nodeType":"190","messageId":"191","endLine":2,"endColumn":25},{"ruleId":"180","severity":1,"message":"218","line":12,"column":6,"nodeType":"182","endLine":12,"endColumn":17,"suggestions":"219"},{"ruleId":"180","severity":1,"message":"220","line":18,"column":6,"nodeType":"182","endLine":18,"endColumn":14,"suggestions":"221"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUserAction'. Either include it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["222"],"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'device' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'handleSearchFilter' and 'updateUserStocks'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has a duplicate dependency: 'showAllDivs'. Either omit it or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'getStocks' and 'showHideNavbar'. Either include them or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.",["227"],"React Hook useEffect has missing dependencies: 'alreadyAddedCheck', 'currentUserStocks', and 'filterResults'. Either include them or remove the dependency array.",["228"],"'nas' is defined but never used.","'GoogleSignInButton' is defined but never used.","'userRef' is assigned a value but never used.","'reportWebVitals' is defined but never used.","'spinnerIcon' is assigned a value but never used.","'LoaderSmall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTotal', 'stock.ticker', and 'stockPayouts.length'. Either include them or remove the dependency array. If 'setStockPayouts' needs the current value of 'stock.ticker', you can also switch to useReducer instead of useState and read 'stock.ticker' in the reducer.",["229"],"React Hook useEffect has missing dependencies: 'arr', 'drawChart', and 'makeInfoValues'. Either include them or remove the dependency array.",["230"],"'cents' is assigned a value but never used.","'D3Graph' is defined but never used.","'currentUser' is assigned a value but never used.","'showAllDivsAction' is assigned a value but never used.","'tickerData' is assigned a value but never used.","'res' is assigned a value but never used.","'firestore' is defined but never used.","'auth' is defined but never used.","React Hook useEffect has missing dependencies: 'getMostDividends' and 'stocks'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'showHideNavbar'. Either include it or remove the dependency array.",["232"],{"desc":"233","fix":"234"},"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [setCurrentUserAction]",{"range":"251","text":"252"},"Update the dependencies array to be: [handleSearchFilter, query, updateUserStocks]",{"range":"253","text":"254"},"Update the dependencies array to be: [showAllDivs, showViewAllForm]",{"range":"255","text":"256"},"Update the dependencies array to be: [stocks, navbar, showHideNavbar, getStocks]",{"range":"257","text":"258"},"Update the dependencies array to be: [alreadyAddedCheck, currentUserStocks, filterResults, query, tickersArr]",{"range":"259","text":"260"},"Update the dependencies array to be: [currentUserStocks, getTotal, stock.ticker, stockPayouts.length]",{"range":"261","text":"262"},"Update the dependencies array to be: [valueArr, infoValues, arr, makeInfoValues, drawChart]",{"range":"263","text":"264"},"Update the dependencies array to be: [getMostDividends, stocks, topStocks]",{"range":"265","text":"266"},"Update the dependencies array to be: [navbar, showHideNavbar]",{"range":"267","text":"268"},[990,996],"[setCurrentUserAction]",[1392,1399],"[handleSearchFilter, query, updateUserStocks]",[974,1017],"[showAllDivs, showViewAllForm]",[1006,1028],"[stocks, navbar, showHideNavbar, getStocks]",[1754,1773],"[alreadyAddedCheck, currentUserStocks, filterResults, query, tickersArr]",[1676,1695],"[currentUserStocks, getTotal, stock.ticker, stockPayouts.length]",[541,563],"[valueArr, infoValues, arr, makeInfoValues, drawChart]",[299,310],"[getMostDividends, stocks, topStocks]",[614,622],"[navbar, showHideNavbar]"]