[{"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Header.js":"1","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/App.js":"2","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksList.js":"3","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Toolbar.js":"4","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddForm.js":"5","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Home.js":"6","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SearchStocks.js":"7","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/stockUtilities.js":"8","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/nyseOBJ.js":"9","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Landing.js":"10","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SignIn.js":"11","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Buttons/GoogleSignInButton.js":"12","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Register.js":"13","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Firebase/firebase.js":"14","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksWrapper.js":"15","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Drawer.js":"16","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StockToolbar.js":"17","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/index.js":"18","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/LoadingIcon.js":"19","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-types.js":"20","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-types.js":"21","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-reducer.js":"22","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-reducer.js":"23","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/store.js":"24","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/root-reducer.js":"25","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/mediaquery.js":"26","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-selectors.js":"27","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-actions.js":"28","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-selectors.js":"29","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-actions.js":"30","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/TransformIcon.js":"31","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/DividendsForm.js":"32","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ViewAll.js":"33","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Footer.js":"34","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddMissing.js":"35","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/D3Graph.js":"36","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Reports.js":"37","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/HowManyStocks.js":"38","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/reportWebVitals.js":"39","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/stocksContext.js":"40"},{"size":2026,"mtime":1609045961581,"results":"41","hashOfConfig":"42"},{"size":1920,"mtime":1612920685443,"results":"43","hashOfConfig":"42"},{"size":9301,"mtime":1613629639226,"results":"44","hashOfConfig":"42"},{"size":2977,"mtime":1609575695431,"results":"45","hashOfConfig":"42"},{"size":1752,"mtime":1609186314636,"results":"46","hashOfConfig":"42"},{"size":2481,"mtime":1610164628249,"results":"47","hashOfConfig":"42"},{"size":10565,"mtime":1609217866049,"results":"48","hashOfConfig":"42"},{"size":8481,"mtime":1613618533821,"results":"49","hashOfConfig":"42"},{"size":196095,"mtime":1608023988086,"results":"50","hashOfConfig":"42"},{"size":12241,"mtime":1610380044191,"results":"51","hashOfConfig":"42"},{"size":6392,"mtime":1609184587739,"results":"52","hashOfConfig":"42"},{"size":266,"mtime":1608090369026,"results":"53","hashOfConfig":"42"},{"size":4734,"mtime":1609178037674,"results":"54","hashOfConfig":"42"},{"size":1501,"mtime":1608259028241,"results":"55","hashOfConfig":"42"},{"size":3223,"mtime":1609116278052,"results":"56","hashOfConfig":"42"},{"size":5414,"mtime":1609492094377,"results":"57","hashOfConfig":"42"},{"size":8426,"mtime":1613603714007,"results":"58","hashOfConfig":"42"},{"size":701,"mtime":1608244540191,"results":"59","hashOfConfig":"42"},{"size":3136,"mtime":1608567496065,"results":"60","hashOfConfig":"42"},{"size":124,"mtime":1608497001270,"results":"61","hashOfConfig":"42"},{"size":196,"mtime":1609023340218,"results":"62","hashOfConfig":"42"},{"size":1289,"mtime":1609023486820,"results":"63","hashOfConfig":"42"},{"size":861,"mtime":1609023456999,"results":"64","hashOfConfig":"42"},{"size":334,"mtime":1608248159585,"results":"65","hashOfConfig":"42"},{"size":796,"mtime":1609024935585,"results":"66","hashOfConfig":"42"},{"size":591,"mtime":1601309934587,"results":"67","hashOfConfig":"42"},{"size":293,"mtime":1608495201955,"results":"68","hashOfConfig":"42"},{"size":537,"mtime":1609023327356,"results":"69","hashOfConfig":"42"},{"size":487,"mtime":1609023433975,"results":"70","hashOfConfig":"42"},{"size":260,"mtime":1608494959365,"results":"71","hashOfConfig":"42"},{"size":1328,"mtime":1608604373721,"results":"72","hashOfConfig":"42"},{"size":10706,"mtime":1609254888570,"results":"73","hashOfConfig":"42"},{"size":5661,"mtime":1613630350857,"results":"74","hashOfConfig":"42"},{"size":625,"mtime":1613615142144,"results":"75","hashOfConfig":"42"},{"size":4870,"mtime":1609259328070,"results":"76","hashOfConfig":"42"},{"size":5070,"mtime":1610323689663,"results":"77","hashOfConfig":"42"},{"size":1500,"mtime":1609576934983,"results":"78","hashOfConfig":"42"},{"size":1321,"mtime":1609579367031,"results":"79","hashOfConfig":"42"},{"size":362,"mtime":1607318708302,"results":"80","hashOfConfig":"42"},{"size":208,"mtime":1613601513960,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1211qm8",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Header.js",[],["175","176"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/App.js",["177"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksList.js",["178","179"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Toolbar.js",["180"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectShowAllDivs } from \"../../redux/stocks/stocks-selectors\";\nimport AddForm from \"../Home/AddForm\";\nimport ViewAll from \"../Home/ViewAll\";\n\nconst Toolbar = ({ selectShowAllDivs }) => {\n  const [add] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608615849/Dividend%20Tracker/Icons/Stock%20Toolbar/plus-svgrepo-com_mtsovt.svg\"\n  );\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showViewAllForm, setShowViewAllForm] = useState(\n    selectShowAllDivs.show || false\n  );\n\n  useEffect(() => {\n    setShowViewAllForm(selectShowAllDivs.show);\n  }, [selectShowAllDivs, showViewAllForm]);\n\n  return (\n    <Container\n      onClick={() => {\n        return showAddForm ? setShowAddForm(false) : null;\n      }}\n    >\n      <ReportButton>\n        <Link to=\"/reports\">\n          <button>Reports</button>\n        </Link>\n      </ReportButton>\n      <AddTickerWrapper>\n        <AddTicker onClick={() => setShowAddForm(true)}>\n          <span>Add stock</span>\n          <img src={add} alt=\"add\" />\n        </AddTicker>\n      </AddTickerWrapper>\n      {showAddForm ? <AddForm /> : null}\n      {showViewAllForm ? <ViewAll payouts={selectShowAllDivs.payouts} /> : null}\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectShowAllDivs: selectShowAllDivs,\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\n\n// styles\nconst Container = styled.div`\n  width: 100%;\n  height: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #fff;\n  background-color: #7249d1;\n  background-color: #edc639;\n  background-color: #fff;\n  margin-bottom: 3rem;\n  padding: 0;\n  overflow: hidden;\n  opacity: 0;\n  animation: drop_toolbar_down 0.5s 1s forwards;\n  border-bottom: 2px solid #999;\n\n  @keyframes drop_toolbar_down {\n    to {\n      opacity: 1;\n      padding: 0.5rem;\n      height: 4.25rem;\n    }\n  }\n`;\nconst ReportButton = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  /* border: 2px solid #edc639; */\n  /* border: 1px solid red; */\n\n  button {\n    width: 6rem;\n    height: 3rem;\n    cursor: pointer;\n    border-radius: 3px;\n  }\n`;\nconst AddTickerWrapper = styled.div`\n  width: 100%;\n  height: 3rem;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  /* border: 1px solid red; */\n`;\nconst AddTicker = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 1rem;\n  box-shadow: 2px 2px 8px 0 #999;\n  background-color: #fff;\n  cursor: pointer;\n  /* border: 1px solid orange; */\n\n  img {\n    margin-left: 1rem;\n    width: 2rem;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddForm.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Home.js",["181"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { auth, firestore } from \"../Firebase/firebase\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Header from \"../Shared/Header\";\nimport Toolbar from \"../Shared/Toolbar\";\nimport StocksList from \"./StocksList\";\nimport LoadingIcon from \"../Shared/LoadingIcon\";\nimport { setStocks } from \"../../redux/stocks/stocks-actions\";\nimport { setCurrentUser } from \"../../redux/user/user-actions\";\nimport { selectAllStocks } from \"../../redux/stocks/stocks-selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user-selectors\";\n\nconst Home = ({\n  setCurrentUser,\n  selectCurrentUser,\n  setStocks,\n  selectAllStocks,\n  history,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [allStocks, setAllStocks] = useState(null);\n\n  useEffect(() => {\n    // updated user on signout\n    const unsub = auth.onAuthStateChanged(async (user) => {\n      if (!user) {\n        setCurrentUser(null);\n        setStocks(null);\n      }\n    });\n\n    if (!selectAllStocks) {\n      // console.log(\"we dont' have stocks already\");\n      getStocks();\n    }\n\n    return () => {\n      unsub();\n    };\n  }, [auth]);\n\n  const getStocks = () => {\n    setLoading(true);\n    const stocksCollectionRef = firestore.collection(\"symbols\");\n    stocksCollectionRef.get().then((data) => {\n      setStocks(data.docs[0].data().symbols);\n      setAllStocks(data.docs[0].data().symbols);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <Container>\n      <Sticky>\n        <Header\n          text={\"Dividend Tracker\"}\n          user={selectCurrentUser.first}\n          auth={auth}\n          history={history}\n        />\n        <Toolbar stocks={allStocks} />\n      </Sticky>\n      <StocksList />\n      {loading ? <LoadingIcon big={true} height={\"6rem\"} /> : null}\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectAllStocks: selectAllStocks,\n  selectCurrentUser: selectCurrentUser,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  setStocks: (stocks) => dispatch(setStocks(stocks)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n// styles\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  padding-bottom: 4rem;\n  /* border: 1px solid red; */\n`;\nconst Sticky = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: 1;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SearchStocks.js",["182"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { addStock, deleteStock } from \"../../resources/stockUtilities\";\nimport {\n  selectCurrentUser,\n  selectCurrentUserStocks,\n} from \"../../redux/user/user-selectors\";\nimport { setCurrentUserStocks } from \"../../redux/user/user-actions\";\nimport TransformIcon from \"../Shared/TransformIcon\";\nimport AddMissing from \"./AddMissing\";\n\nconst SearchStocks = ({\n  allstocks,\n  selectCurrentUser,\n  setCurrentUserStocks,\n  selectCurrentUserStocks,\n}) => {\n  const [query, setQuery] = useState(\"\");\n  const [tickersArr, setTickersArr] = useState(null);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [alreadyAdded, setAlreadyAdded] = useState(null);\n  const [showAddMissing, setShowAddMissing] = useState(false);\n  const [alreadyAddedIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608509562/Dividend%20Tracker/Icons/SearchResults/check-svgrepo-com_1_g7pyz8.svg\"\n  );\n  const [addToListIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608506065/Dividend%20Tracker/Icons/SearchResults/add-svgrepo-com_gihegx.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    console.log(!!query && filteredResults.length === 0);\n    if (!tickersArr) {\n      buildTickersArr(selectCurrentUserStocks);\n    }\n    // set the focus on the input on render\n    document.querySelector(\"#search_input\").focus();\n    filterResults(query);\n    alreadyAddedCheck(query);\n  }, [query, tickersArr]);\n\n  // filter the query through the array of stocks\n  const filterResults = (query) => {\n    let temp = allstocks.filter((stock) => {\n      return stock.ticker.toLowerCase() === query.toLowerCase() ? stock : null;\n    });\n    setFilteredResults(temp);\n  };\n  // make ticker array to compare whats been added already\n  const buildTickersArr = (arr) => {\n    setTickersArr(\n      arr.map((stockObj) => {\n        return stockObj.ticker;\n      })\n    );\n  };\n  // adding stock function\n  const handleAddStock = async (user, stock) => {\n    setLoading(true);\n    let timeStampeStock = { ...stock, added: new Date().getTime() };\n    let success = await addStock(user, timeStampeStock);\n    if (success.message === undefined) {\n      setCurrentUserStocks(selectCurrentUserStocks.concat(stock));\n      setAlreadyAdded(!alreadyAdded);\n      let arr = tickersArr;\n      arr.push(query.toUpperCase());\n      setTickersArr(arr);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n  // determine the icons for whats been added\n  const alreadyAddedCheck = (query) => {\n    if (tickersArr) {\n      setAlreadyAdded(\n        !!tickersArr.some((ticker) => query.toUpperCase() === ticker)\n      );\n    }\n  };\n  // handle unchecking the match aka deleting\n  const handleDelete = async (user, stock) => {\n    setLoading(true);\n    let success = await deleteStock(user, stock);\n    if (success.message === undefined) {\n      console.log(\"success\");\n      setCurrentUserStocks(\n        selectCurrentUserStocks.filter(\n          (stocks) => stocks.ticker !== stock.ticker\n        )\n      );\n      setAlreadyAdded(!alreadyAdded);\n      setTickersArr(\n        tickersArr.filter((ticker) => query.toUpperCase() !== ticker)\n      );\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n\n  return (\n    <Container id={\"searchResults\"} onClick={(e) => e.stopPropagation()}>\n      <h5>Search:</h5>\n      <InputWrapper>\n        <Input\n          autoComplete=\"off\"\n          id=\"search_input\"\n          type=\"text\"\n          placeholder=\"Enter Symbol/Ticker value\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          style={query.length ? { textTransform: \"uppercase\" } : null}\n        />\n        {query.length ? (\n          <span onClick={() => setQuery(\"\")}>&#10005; </span>\n        ) : null}\n      </InputWrapper>\n      <Results>\n        <h4>Results:</h4>\n        {query && query !== \" \" ? (\n          <ResultsWrapper>\n            {filteredResults.slice(0, 100).map((stock, ind) => (\n              <ResultRow key={ind}>\n                <Col width={\"30%\"}>\n                  <label>Ticker</label>\n                  <p>{stock.ticker}</p>\n                </Col>\n                <Col width={\"70%\"}>\n                  <label>Company</label>\n                  <Row>\n                    <p>{stock.name}</p>\n                  </Row>\n                </Col>\n                {loading ? (\n                  <AlreadyAddedLoader>\n                    <img src={littleLoader} alt=\"little loader\" />\n                  </AlreadyAddedLoader>\n                ) : (\n                  <IconsDiv\n                    onClick={() =>\n                      alreadyAdded\n                        ? handleDelete(selectCurrentUser.id, stock)\n                        : handleAddStock(selectCurrentUser.id, stock)\n                    }\n                  >\n                    <TransformIcon\n                      first={addToListIcon}\n                      second={alreadyAddedIcon}\n                      w1={\"1.5rem\"}\n                      w2={\"1.5rem\"}\n                      transform={alreadyAdded}\n                    />\n                  </IconsDiv>\n                )}\n              </ResultRow>\n            ))}\n          </ResultsWrapper>\n        ) : null}\n        <ResultsWrapper>\n          {filteredResults.length === 0 && query ? (\n            <NoResultRow>\n              {!showAddMissing ? <p>Sorry, no results</p> : null}\n              <div>\n                {!showAddMissing ? (\n                  <AddMissingText onClick={() => setShowAddMissing(true)}>\n                    Need to add a missing stock/fund?\n                  </AddMissingText>\n                ) : (\n                  <span\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      width: \"80%\",\n                    }}\n                  >\n                    <span style={{ color: \"#7249d1\" }}>Add stock:</span>\n                    <span\n                      style={{\n                        width: \"1rem\",\n                        cursor: \"pointer\",\n                        color: \"#FF3501\",\n                      }}\n                      onClick={() => setShowAddMissing(false)}\n                    >\n                      &#10005;\n                    </span>\n                  </span>\n                )}\n              </div>\n              {showAddMissing ? (\n                <AddMissing user={selectCurrentUser.id} />\n              ) : null}\n            </NoResultRow>\n          ) : null}\n        </ResultsWrapper>\n      </Results>\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectCurrentUser: selectCurrentUser,\n  selectCurrentUserStocks: selectCurrentUserStocks,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUserStocks: (stocks) => dispatch(setCurrentUserStocks(stocks)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchStocks);\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 530px;\n  height: 20rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #fff;\n  font-family: \"Exo\", sans-serif;\n  /* border: 1px solid #333; */\n\n  h5 {\n    width: 100%;\n    padding-left: 2rem;\n    font-size: 1rem;\n    /* border: 1px solid red; */\n  }\n`;\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 3rem;\n  padding: 0 0.3rem;\n  margin: 0.5rem 0;\n  border-radius: 3px;\n  border: 2px solid #7249d1;\n\n  span {\n    position: absolute;\n    left: calc(100% - 1.5rem);\n    width: 2rem;\n    color: #ff3501;\n    opacity: 0.7;\n    cursor: pointer;\n    /* border: 1px solid red; */\n  }\n`;\nconst Input = styled.input`\n  &:focus {\n    outline: none;\n    /* outline-color: #7249d1; */\n  }\n  position: relative;\n  width: 220px;\n  padding: 0.4rem;\n  font-size: 17px;\n  border-radius: 3px;\n  font-family: \"Exo\", sans-serif;\n  border: none;\n  /* border: 2px solid #7249d1; */\n`;\nconst Results = styled.div`\n  width: 100%;\n  /* border: 2px solid orange; */\n\n  h4 {\n    padding-top: 1.5rem;\n    margin: 0.4rem 0;\n  }\n`;\nconst ResultsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: scroll;\n  /* border: 1px solid red; */\n`;\nconst ResultRow = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 0 1rem;\n  /* box-shadow: 2px 3px 8px 0 #999; */\n  cursor: default;\n  /* border: 1px solid red; */\n\n  label {\n    height: 1rem;\n    font-size: 0.9rem;\n    text-align: right;\n    padding-right: 1rem;\n    /* border: 2px solid red; */\n  }\n\n  p {\n    font-size: 1.2rem;\n    /* border: 2px solid red; */\n  }\n`;\nconst NoResultRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 0 1rem;\n  cursor: default;\n  /* border: 1px solid red; */\n\n  p {\n    font-size: 1.2rem;\n    /* border: 2px solid red; */\n  }\n`;\nconst AddMissingText = styled.span`\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n  color: #7249d1;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  width: ${(props) => props.width};\n  /* border: 1px solid green; */\n`;\nconst IconsDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  /* border: 1px solid red; */\n`;\nconst AlreadyAddedLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  animation: spin_already_added_loader 1s linear forwards infinite;\n  /* border: 1px solid red; */\n\n  img {\n    width: 1.5rem;\n  }\n\n  @keyframes spin_already_added_loader {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/stockUtilities.js",["183"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/nyseOBJ.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Landing.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SignIn.js",["184","185","186"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { device } from \"../../resources/mediaquery\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { auth, firestore } from \"../Firebase/firebase\";\nimport GoogleSignInButton from \"../Shared/Buttons/GoogleSignInButton\";\nimport Register from \"./Register\";\nimport { setCurrentUser } from \"../../redux/user/user-actions\";\n\nconst SignIn = ({ setCurrentUser, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [cash] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1609172536/Dividend%20Tracker/Icons/cash-bill-svgrepo-com_dtqrjh.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n  const [close] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608616936/Dividend%20Tracker/Icons/SearchResults/close-svgrepo-com_c2ygft.svg\"\n  );\n\n  const handleSubmit = async (e) => {\n    // prevent refresh\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      let { user } = await auth.signInWithEmailAndPassword(email, password);\n      let userRef = await firestore\n        .doc(`users/${user.uid}`)\n        .get()\n        .then((data) => {\n          setCurrentUser(data.data());\n          history.push(\"/home\");\n          return;\n        });\n    } catch (err) {\n      setLoading(false);\n      alert(err.message);\n      console.error(err);\n    }\n  };\n\n  const handleLoadRegistration = () => {\n    setLoading(true);\n    let wrapper = document.querySelector(\"#register_wrapper\");\n\n    setTimeout(() => {\n      wrapper.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n      setLoading(false);\n    }, 3000);\n    setShowRegistrationForm(true);\n  };\n  return (\n    <Container>\n      <Header>\n        <Link to=\"/\">\n          <h1>\n            Dividend Tracker <img src={cash} alt=\"cash\" />\n          </h1>\n        </Link>\n      </Header>\n      <Wrapper opacity={loading ? \"0.5\" : null}>\n        <h3>Sign In to your account</h3>\n        <Form\n          opacity={showRegistrationForm ? \"0.5\" : null}\n          events={showRegistrationForm ? \"none\" : null}\n        >\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"enter password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <Button\n            disabled={loading}\n            onClick={(e) => {\n              handleSubmit(e);\n            }}\n          >\n            Sign In\n          </Button>\n        </Form>\n\n        <RegWrapper id=\"register_wrapper\">\n          {showRegistrationForm ? null : (\n            <NoAccount>\n              Don't have an account?\n              <span onClick={() => handleLoadRegistration()}> Register</span>\n            </NoAccount>\n          )}\n          {showRegistrationForm ? (\n            <div>\n              <Close\n                src={close}\n                alt=\"close\"\n                onClick={() => setShowRegistrationForm(false)}\n              />\n              <Register />\n            </div>\n          ) : null}\n        </RegWrapper>\n\n        {loading ? <Loader src={littleLoader} alt=\"loading\" /> : null}\n      </Wrapper>\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({});\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignIn));\n\n// styles\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  /* border: 1px solid red; */\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 3rem;\n  background-color: #333;\n\n  h1 {\n    margin-left: 2rem;\n    font-size: 1.5rem;\n    color: #fff;\n    /* border: 1px solid red; */\n  }\n\n  img {\n    width: 2rem;\n    transform: rotate(-45deg);\n    margin-left: 1rem;\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: ${(props) => props.opacity};\n  /* border: 1px solid red; */\n\n  h3 {\n    margin: 6rem 0 2rem;\n    /* border: 1px solid red; */\n  }\n\n  @keyframes spin_loader_at_sign_in {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\nconst Loader = styled.img`\n  width: 2rem;\n  animation: spin_loader_at_sign_in 1s linear infinite;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 2rem;\n  opacity: ${(props) => props.opacity};\n  pointer-events: ${(props) => props.events};\n  /* border: 1px solid red; */\n\n  label {\n    margin-top: 2rem;\n  }\n\n  input {\n    padding: 0.4rem 1rem;\n    width: 80%;\n    font-size: 18px;\n  }\n\n  input::placeholder {\n    color: #ccc;\n  }\n`;\nconst Button = styled.button`\n  cursor: pointer;\n  width: 5.5rem;\n  height: 2rem;\n  margin: 2rem 0;\n  border-radius: 3px;\n  background-color: #27d67b;\n  border: none;\n  outline: none;\n  /* border: 1px solid red; */\n`;\nconst RegWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 2rem 0;\n  opacity: 0;\n  animation: fade_reg_wrapper_in 1s linear forwards;\n  /* border: 1px solid blue; */\n\n  span {\n    &:hover {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n    color: #7249d1;\n    margin-left: 1rem;\n  }\n\n  @keyframes fade_reg_wrapper_in {\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst NoAccount = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Close = styled.img`\n  position: absolute;\n  left: calc(100% - 7rem);\n  top: 1rem;\n  width: 1.5rem;\n  cursor: pointer;\n  /* border: 1px solid blue; */\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Buttons/GoogleSignInButton.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Register.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Firebase/firebase.js",["187"],"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { setCurrentUser } from \"../../redux/user/user-actions\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBa_DTb-CMVCtzZ9etA45OLfTpR0v9Km-A\",\n  authDomain: \"dividendtracker-e1403.firebaseapp.com\",\n  projectId: \"dividendtracker-e1403\",\n  storageBucket: \"dividendtracker-e1403.appspot.com\",\n  messagingSenderId: \"225539677721\",\n  appId: \"1:225539677721:web:41106d6d71e299fdbd9488\",\n  measurementId: \"G-L3PK11PDSM\",\n};\n\n// REGISTER USER\nexport const creatUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) {\n    return;\n  }\n  console.log(\"creating the document\");\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  let returnedUser = null;\n\n  if (!snapshot.exists) {\n    const { email } = userAuth;\n    const { first, last } = addtionalData;\n    const stocks = [];\n    const id = userAuth.uid;\n    const createdAt = new Date();\n\n    const userObj = {\n      first,\n      last,\n      email,\n      createdAt,\n      stocks,\n      id,\n      ...addtionalData,\n    };\n\n    try {\n      await userRef.set({\n        ...userObj,\n      });\n      returnedUser = userObj;\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n  return returnedUser;\n  // return userRef;\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksWrapper.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Drawer.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StockToolbar.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/index.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/LoadingIcon.js",["188","189","190"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst LoadingIcon = ({ height, big, visibiliy, marginTop }) => {\n  const [spinnerIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608524427/Dividend%20Tracker/Icons/cube-svgrepo-com_hiothk.svg\"\n  );\n\n  // <LoaderSmall visibiliy={visibiliy} />\n  return (\n    <div>\n      {big ? (\n        <Loader>\n          <Wrapper height={height}>\n            <Spinner bg=\"red\" height=\"35%\" aniName=\"height1\" delay=\"0.2s\" />\n            <Spinner bg=\"blue\" height=\"80%\" aniName=\"height2\" delay=\"0.4s\" />\n            <Spinner bg=\"green\" height=\"20%\" aniName=\"height3\" delay=\"0.6s\" />\n            <Spinner bg=\"purple\" height=\"70%\" aniName=\"height4\" delay=\"0.8s\" />\n            <Spinner bg=\"orange\" height=\"50%\" aniName=\"height5\" delay=\"1s\" />\n          </Wrapper>\n        </Loader>\n      ) : (\n        <Wrapper visibiliy={visibiliy} height={height} marginTop={marginTop}>\n          <Spinner bg=\"red\" height=\"35%\" aniName=\"height1\" delay=\"0.2s\" />\n          <Spinner bg=\"blue\" height=\"80%\" aniName=\"height2\" delay=\"0.4s\" />\n          <Spinner bg=\"green\" height=\"20%\" aniName=\"height3\" delay=\"0.6s\" />\n          <Spinner bg=\"purple\" height=\"70%\" aniName=\"height4\" delay=\"0.8s\" />\n          <Spinner bg=\"orange\" height=\"50%\" aniName=\"height5\" delay=\"1s\" />\n        </Wrapper>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingIcon;\n\n// styels\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Wrapper = styled.div`\n  height: ${(props) => props.height};\n  width: 9rem;\n  transform: rotate(180deg);\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: ${(props) => props.marginTop};\n  visibility: ${(props) => props.visibiliy};\n  border-top: 4px solid #999;\n  /* border: 1px solid red; */\n`;\nconst Spinner = styled.div`\n  width: 30px;\n  height: ${(props) => props.height};\n  background-color: ${(props) => props.bg};\n  animation: 0.5s alternate infinite forwards;\n  animation-name: ${(props) => props.aniName};\n  /* animation-delay: ${(props) => props.delay}; */\n  /* border: 1px solid red; */\n\n  @keyframes height1 {\n    to {\n      height: 20%;\n    }\n  }\n\n  @keyframes height2 {\n    to {\n      height: 90%;\n    }\n  }\n  @keyframes height3 {\n    to {\n      height: 60%;\n    }\n  }\n  @keyframes height4 {\n    to {\n      height: 30%;\n    }\n  }\n  @keyframes height5 {\n    to {\n      height: 100%;\n    }\n  }\n`;\nconst LoaderSmall = styled.div`\n  position: absolute;\n  top: calc(50% - 15px);\n  left: calc(50% - 15px);\n  height: 30px;\n  width: 30px;\n  opacity: 1;\n  visibility: ${(props) => props.visibiliy};\n  animation: rotate_drawer_loader 0.5s ease-in infinite alternate;\n  animation-delay: ${(props) => props.delay};\n  border-radius: 50%;\n  border: 3px solid red;\n  border-top-color: blue;\n\n  @keyframes rotate_drawer_loader {\n    to {\n      border-radius: 0%;\n      transform: rotate(408deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-types.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-types.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-reducer.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-reducer.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/store.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/root-reducer.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/mediaquery.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-selectors.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-actions.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/stocks/stocks-selectors.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/redux/user/user-actions.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/TransformIcon.js",["191"],"import React, { useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst TransformIcon = ({ first, second, transform, w1, w2 }) => {\n  useEffect(() => {\n    // console.log(transform);\n  }, [transform]);\n\n  return (\n    <Container>\n      {transform ? (\n        <Second width={w2}>\n          <img src={second} alt=\"second\" />\n        </Second>\n      ) : (\n        <First width={w1}>\n          <img src={first} alt=\"first\" />\n        </First>\n      )}\n    </Container>\n  );\n};\n\nexport default TransformIcon;\n\n// styles\nconst ImageDiv = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${(props) => props.width};\n\n  img {\n    width: 100%;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border: 1px solid red; */\n`;\nconst First = styled.div`\n  ${ImageDiv}\n  transform: scale(1);\n  opacity: 1;\n  animation: whirl_image_out 0.3s forwards;\n\n  @keyframes whirl_image_out {\n    from {\n      transform: scale(0.1);\n      opacity: 0;\n    }\n  }\n`;\nconst Second = styled.div`\n  ${ImageDiv}\n  opacity: 0;\n  transform: scale(0.1);\n  animation: whirl_image_in 0.3s forwards;\n\n  @keyframes whirl_image_in {\n    to {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/DividendsForm.js",["192","193"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  updateStockDividend,\n  deleteDividend,\n  formatDateData,\n  makeTodaysDate,\n} from \"../../resources/stockUtilities\";\nimport {\n  selectCurrentUser,\n  selectCurrentUserStocks,\n} from \"../../redux/user/user-selectors\";\nimport {\n  setShowAllDivs,\n  setShowAllDivsStock,\n} from \"../../redux/stocks/stocks-actions\";\nimport { setCurrentUserStocks } from \"../../redux/user/user-actions\";\nimport { selectShowAllDivs } from \"../../redux/stocks/stocks-selectors\";\n\nconst DividendsForm = ({\n  stock,\n  selectCurrentUser,\n  setShowAllDivs,\n  setCurrentUserStocks,\n  selectCurrentUserStocks,\n}) => {\n  const [amount, setAmount] = useState(0);\n  const [payDate, setPayDate] = useState(makeTodaysDate());\n  const [stockPayouts, setStockPayouts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [deleteIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608651426/Dividend%20Tracker/Icons/Stock%20Toolbar/delete-folder-hand-drawn-outline-svgrepo-com_rjmcgy.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n  const [openModalIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1609038418/Dividend%20Tracker/Icons/Stock%20Toolbar/share-arrows-svgrepo-com_npdvvm.svg\"\n  );\n  useEffect(() => {\n    // set the stockPayouts variable\n    setStockPayouts(\n      selectCurrentUserStocks.filter((s) => s.ticker === stock.ticker)[0]\n        .payouts || []\n    );\n    // populate the total in the history header\n    if (stockPayouts.length) {\n      getTotal();\n    }\n  }, [selectCurrentUserStocks]);\n\n  // handle recording the dividend\n  const handleSubmit = async () => {\n    setLoading(true);\n    // if they don't have any payout yet make an empty array\n    let payoutObj = {\n      amount: amount,\n      payDate: payDate,\n      created: new Date().getTime(),\n    };\n    // console.log(stock.payouts);\n    let success = await updateStockDividend(\n      selectCurrentUser.id,\n      stock,\n      stockPayouts.concat(payoutObj)\n    );\n    console.log(\"updatestockdiv--return\", success);\n    if (success.message === undefined) {\n      setCurrentUserStocks(success);\n      setAmount(0);\n      setPayDate(makeTodaysDate());\n      setLoading(false);\n    } else {\n      console.log(\"There was an error.\");\n      return {\n        message: success.message,\n      };\n    }\n  };\n\n  // handle delete\n  const handleDelete = async (createdID) => {\n    setLoading(true);\n    let newDividends = await deleteDividend(\n      selectCurrentUser.id,\n      stock,\n      createdID\n    );\n    console.log(newDividends);\n    let success = await updateStockDividend(\n      selectCurrentUser.id,\n      stock,\n      newDividends\n    );\n    if (success.message === undefined) {\n      setCurrentUserStocks(success);\n      setLoading(false);\n    } else {\n      console.log(\"There was an error.\");\n      return {\n        message: success.message,\n      };\n    }\n  };\n  // generate total for history header\n  const getTotal = () => {\n    let acc = 0;\n    if (stockPayouts.length) {\n      stockPayouts.map((val) => {\n        return (acc += parseFloat(val.amount));\n      });\n      return acc.toFixed(2);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Amount>\n          <label>Amount:</label>\n          <RowInput>\n            <span>&#36;</span>\n            <input\n              id=\"amount_input\"\n              autoFocus={window.innerWidth > 580 ? true : null}\n              type=\"number\"\n              min=\"0\"\n              step=\"0.01\"\n              default=\"0.00\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </RowInput>\n        </Amount>\n        <DateWrapper>\n          <label>Date:</label>\n          <input\n            id=\"payDate_input\"\n            type=\"date\"\n            value={payDate}\n            onChange={(e) => setPayDate(e.target.value)}\n          />\n        </DateWrapper>\n        <SubmitDividend\n          onClick={() => handleSubmit()}\n          disabled={loading || !(amount && payDate)}\n        >\n          {loading ? <img src={littleLoader} alt=\"loading\" /> : \"Add\"}\n        </SubmitDividend>\n      </Row>\n      <History\n        opacity={loading ? \"0.5\" : null}\n        p_events={loading ? \"none\" : null}\n      >\n        <HistoryHeader>\n          <HistoryHeaderWrapper>\n            <h6>History:</h6>\n            <>\n              <div\n                onClick={() => {\n                  setShowAllDivs({\n                    show: true,\n                    payouts: stockPayouts,\n                    stock: stock,\n                  });\n                  console.log(stockPayouts);\n                }}\n              >\n                View All\n                {stockPayouts && stockPayouts.length > 4\n                  ? ` (${stockPayouts.length})`\n                  : null}\n                <img src={openModalIcon} alt=\"view all\" width=\"18px\" />\n              </div>\n            </>\n            <p>\n              Total:{\" \"}\n              {stockPayouts ? (\n                <span>{stockPayouts.length ? `$${getTotal()}` : \"$0\"}</span>\n              ) : (\n                \"$0\"\n              )}\n            </p>\n          </HistoryHeaderWrapper>\n        </HistoryHeader>\n        {stockPayouts ? (\n          <HistoryWrapper>\n            {stockPayouts.slice(0, 4).map((pay, ind) => (\n              <HistoryLine key={ind}>\n                <span>{ind + 1}</span>\n                <div>\n                  <p>${parseFloat(pay.amount).toFixed(2)}</p>\n                  <span>{formatDateData(pay.payDate)}</span>\n                  <DeleteDividend>\n                    <img\n                      src={deleteIcon}\n                      alt=\"delete dividend\"\n                      onClick={() => handleDelete(pay.created)}\n                    />\n                  </DeleteDividend>\n                </div>\n              </HistoryLine>\n            ))}\n          </HistoryWrapper>\n        ) : null}\n        {loading ? <DivLoader src={littleLoader} alt=\"loading\" /> : null}\n      </History>\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectCurrentUser: selectCurrentUser,\n  selectCurrentUserStocks: selectCurrentUserStocks,\n  selectShowAllDivs: selectShowAllDivs,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setShowAllDivs: (viewOjb) => dispatch(setShowAllDivs(viewOjb)),\n  setShowAllDivsStock: (obj) => dispatch(setShowAllDivsStock(obj)),\n  setCurrentUserStocks: (arr) => dispatch(setCurrentUserStocks(arr)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DividendsForm);\n\n// styles\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  width: 100%;\n  /* border: 1px solid red; */\n\n  label {\n    font-size: 0.9rem;\n    color: #444;\n  }\n  input {\n    width: 100%;\n    height: 2rem;\n    font-size: 1.2rem;\n    border: none;\n    outline: none;\n  }\n  input[type=\"number\"] {\n    max-width: 100px;\n    /* border: 1px solid orange; */\n  }\n`;\nconst SubmitDividend = styled.button`\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background-color: #27d67b;\n    color: #fff;\n  }\n  color: #27d67b;\n  height: 2rem;\n  width: 7rem;\n  margin-left: auto;\n  background-color: #fff;\n  cursor: ${(props) => props.pointer};\n  transition-duration: 0.2s;\n  pointer-events: ${(props) => props.p_events};\n  border-radius: 20px;\n  border: 2px solid #27d67b;\n\n  img {\n    width: 1rem;\n    animation: spin_littleloader_in_dividend_submit 1s forwards linear infinite;\n\n    @keyframes spin_littleloader_in_dividend_submit {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  }\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding: 0 0.5rem;\n  background-color: #fff;\n  border-bottom: 2px solid #7249d1;\n  /* border: 1px solid blue; */\n\n  @media ${device.tablet} {\n    justify-content: space-between;\n  }\n`;\nconst RowInput = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  background-color: #fff;\n  /* border: 1px solid red; */\n`;\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tabletS} {\n    margin-left: 2rem;\n  }\n`;\nconst Amount = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst History = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  opacity: ${(props) => props.opacity};\n  pointer-events: ${(props) => props.p_events};\n`;\nconst DivLoader = styled.img`\n  position: absolute;\n  top: 50%;\n  left: calc(50% - 1rem);\n  width: 2rem;\n  animation: spin_div_loader 1s linear infinite;\n\n  @keyframes spin_div_loader {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\nconst HistoryHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst HistoryHeaderWrapper = styled.div`\n  width: 100%;\n  font-size: 0.9rem;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.3rem 0.7rem;\n  color: #fff;\n  background-color: #7249d1;\n\n  h6 {\n    font-size: 0.9rem;\n    padding: 0.1rem 0 0 0.2rem;\n  }\n\n  div {\n    cursor: pointer;\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    img {\n      margin-left: 0.4rem;\n    }\n  }\n\n  p {\n    span {\n      color: #27d67b;\n    }\n  }\n`;\nconst HistoryWrapper = styled.div`\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n  /* border: 1px solid red; */\n\n  @media ${device.tabletS} {\n    padding: 0 1rem;\n  }\n`;\nconst HistoryLine = styled.div`\n  position: relative;\n  width: 48%;\n  margin: 0.1rem 0.1rem 0;\n  border: 1px solid #333;\n  border-top: none;\n  /* border: 1px solid red; */\n\n  span:first-of-type {\n    position: absolute;\n    left: 0.1rem;\n    color: #333;\n    font-size: 0.5rem;\n  }\n\n  div {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 0.8rem;\n    width: 100%;\n\n    p {\n      font-size: 1rem;\n      color: #27d67b;\n    }\n\n    span:first-of-type {\n      position: static;\n      font-size: 0.8rem;\n      color: #999;\n      margin-left: 0.3rem;\n    }\n  }\n`;\nconst DeleteDividend = styled.span`\n  img {\n    width: 1.2rem;\n    cursor: pointer;\n  }\n`;\nconst ViewAllWrapper = styled.div``;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ViewAll.js",["194"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Footer.js",["195"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddMissing.js",["196","197"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { addStock, deleteStock } from \"../../resources/stockUtilities\";\nimport { selectCurrentUserStocks } from \"../../redux/user/user-selectors\";\nimport { setCurrentUserStocks } from \"../../redux/user/user-actions\";\nimport TransformIcon from \"../Shared/TransformIcon\";\n\nconst AddMissing = ({\n  user,\n  setCurrentUserStocks,\n  selectCurrentUserStocks,\n}) => {\n  const [alreadyAddedIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608509562/Dividend%20Tracker/Icons/SearchResults/check-svgrepo-com_1_g7pyz8.svg\"\n  );\n  const [addToListIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608506065/Dividend%20Tracker/Icons/SearchResults/add-svgrepo-com_gihegx.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n  const [alreadyAdded, setAlreadyAdded] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [ticker, setTicker] = useState(null);\n  const [name, setName] = useState(null);\n\n  // adding stock function\n  const handleAddStock = async (user, stock) => {\n    setLoading(true);\n    let timeStampedStock = { ...stock, added: new Date().getTime() };\n    let success = await addStock(user, timeStampedStock);\n    console.log(success);\n    if (success.message === undefined) {\n      setCurrentUserStocks(selectCurrentUserStocks.concat(timeStampedStock));\n      setAlreadyAdded(!alreadyAdded);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n\n  // handle unchecking the match aka deleting\n  const handleDelete = async (user, stock) => {\n    setLoading(true);\n    let success = await deleteStock(user, stock);\n    if (success.message === undefined) {\n      setCurrentUserStocks(\n        selectCurrentUserStocks.filter(\n          (stocks) => stocks.ticker !== stock.ticker\n        )\n      );\n      setAlreadyAdded(!alreadyAdded);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      alert(success.message);\n      console.log(success.message);\n    }\n  };\n\n  const handleSubmit = () => {\n    let stock = {\n      ticker: ticker.toUpperCase(),\n      name: name,\n    };\n    if (!alreadyAdded) {\n      handleAddStock(user, stock);\n    } else {\n      handleDelete(user, stock);\n    }\n  };\n\n  return (\n    <Container>\n      <Col>\n        <label>Ticker/Symbol</label>\n        <input\n          type=\"text\"\n          placeholder=\"ticker\"\n          onChange={(e) => setTicker(e.target.value)}\n          style={ticker ? { textTransform: \"uppercase\" } : null}\n        />\n      </Col>\n      <Col>\n        <label>Company Name</label>\n        <input\n          type=\"text\"\n          placeholder=\"company name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </Col>\n      <IconsDiv onClick={() => (name && ticker ? handleSubmit() : null)}>\n        {loading ? (\n          <AlreadyAddedLoader>\n            <img src={littleLoader} alt=\"little loader\" />\n          </AlreadyAddedLoader>\n        ) : (\n          <TransformIcon\n            first={addToListIcon}\n            second={alreadyAddedIcon}\n            w1={\"1.5rem\"}\n            w2={\"1.5rem\"}\n            transform={alreadyAdded}\n          />\n        )}\n      </IconsDiv>\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectCurrentUserStocks: selectCurrentUserStocks,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUserStocks: (stocks) => dispatch(setCurrentUserStocks(stocks)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMissing);\n\n// styles\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  /* border: 1px solid #333; */\n\n  label {\n    margin-top: 0.8rem;\n  }\n\n  input {\n    font-family: \"Exo\", sans-serif;\n    height: 2rem;\n    width: 100%;\n    font-size: 18px;\n    padding: 0.2rem 0 0.2rem 0.2rem;\n  }\n\n  input::placeholder {\n    color: #ccc;\n  }\n`;\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst IconsDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  /* border: 1px solid red; */\n`;\nconst AlreadyAddedLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  animation: spin_already_added_loader 1s linear forwards infinite;\n  /* border: 1px solid red; */\n\n  img {\n    width: 1.5rem;\n  }\n\n  @keyframes spin_already_added_loader {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/D3Graph.js",["198","199"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport * as d3 from \"d3\";\n\nconst D3Graph = ({ arr, stock }) => {\n  const [valueArr, setValueArr] = useState(null);\n  const [infoValues, setInfoValues] = useState(null);\n\n  useEffect(() => {\n    // console.log(arr);\n    if (!valueArr && !infoValues) {\n      makeValuesArray(arr);\n      makeInfoValues(arr);\n    } else {\n      drawChart(\"100%\", 100);\n    }\n    //   console.log(\"we running\");\n  }, [valueArr, infoValues]);\n\n  // make a values array from the time series data\n  const makeValuesArray = (obj) => {\n    let arr = Object.entries(obj);\n    let values = arr\n      .slice(0, 100)\n      .reverse()\n      .map((val) => {\n        return parseFloat(val[1].value.slice(1));\n      });\n    setValueArr(values.reverse());\n  };\n  // get first middle and last values for the infobar\n  const makeInfoValues = (obj) => {\n    let arr = Object.entries(obj).reverse();\n    // console.log(arr);\n    // console.log(arr.reverse());\n    setInfoValues([\n      formatInfo(arr[1][1].lastUpdated),\n      formatInfo(arr[50][1].lastUpdated),\n      formatInfo(arr[100][1].lastUpdated),\n    ]);\n  };\n\n  // format the info data\n  const formatInfo = (info) => {\n    let date = (info) => {\n      return info.slice(5, 10).replace(\"-\", \"/\");\n    };\n    let time = (info) => {\n      let rawTime = info.slice(11, -6);\n      return rawTime > 12 ? rawTime - 12 + \"pm\" : parseInt(rawTime) + \"am\";\n    };\n\n    return date(info) + \" \" + time(info);\n  };\n  // average for baseline value\n  const average = (array) => array.reduce((a, b) => a + b) / array.length;\n\n  // get the highest value\n  const getHigh = (array) => array.reduce((a, b) => (a > b ? a : b));\n\n  // get correct cents\n  const getCents = (num) => {\n    if (num.toString().includes(\".\")) {\n      return num.toString().slice(-2).includes(\".\")\n        ? (num.toString() + 0).slice(-2)\n        : num.toString().slice(-2);\n    } else {\n      return \"00\";\n    }\n  };\n  // D3 FUNC\n  const drawChart = (w, h) => {\n    // const data = [70, 55, 80, 95, 40, 80];\n    const data = valueArr;\n    const baseLine = data ? data : [100];\n    const dbase = average(baseLine) * 2;\n    // make the svg element\n    const svg = d3\n      .select(`#${stock.ticker}`)\n      .append(\"svg\")\n      .attr(\"width\", w)\n      .attr(\"height\", h);\n    // select all rect elements pass the data and\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .transition()\n      .delay((d, i) => `${i}8`)\n      .duration(800)\n      .attr(\"x\", (d, i) => `${i}%`)\n      .attr(\"y\", (d, i) => 0)\n      .attr(\"width\", \"3px\")\n      .attr(\"height\", (d) => {\n        let cents = getCents(d);\n\n        // console.log(\n        //   (\"The D:\", d, \"DBASE:\", dbase, \"PERCENT:\", cents / dbase) * 100\n        // );\n\n        return (d / dbase) * 100;\n      })\n      .attr(\"fill\", (d) => (d >= dbase / 2 ? \"#27d67b\" : \"#FF3501\"));\n\n    // 38/230 = .165 .165 x 100 = 16.5\n  };\n\n  return (\n    <Container id={`${stock.ticker}`}>\n      <Legend>\n        Market Value <span>(last 7 trading days)</span>\n      </Legend>\n      <LeftInfoBar>\n        <span>0</span>\n        {valueArr ? <span>${average(valueArr).toFixed(2)}</span> : null}\n        {valueArr ? <span>${getHigh(valueArr) / 0.5}</span> : null}\n      </LeftInfoBar>\n      {infoValues ? (\n        <BottomInfoBar>\n          {infoValues.map((i, ind) => (\n            <span key={ind}>{i}</span>\n          ))}\n        </BottomInfoBar>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default D3Graph;\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0 0.1rem;\n  /* overflow: hidden; */\n  transform: scale(-1, -1);\n  background-color: #fff;\n  border-top: 2px solid #7249d1;\n  border-right: 2px solid #7249d1;\n  /* border: 1px solid red; */\n`;\nconst Legend = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 2rem;\n  font-size: 0.8rem;\n  text-align: center;\n  top: calc(100% - 2rem);\n  left: calc(50% - 25%);\n  transform: rotate(180deg);\n  /* border: 1px solid gray; */\n\n  span {\n    display: none;\n\n    @media ${device.tabletS} {\n      display: initial;\n    }\n  }\n`;\nconst LeftInfoBar = styled.div`\n  position: absolute;\n  top: -0.5rem;\n  left: 100%;\n  width: 1rem;\n  height: 110%;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n  align-items: center;\n  transform: rotate(180deg);\n  /* border: 1px solid blue; */\n\n  span {\n    font-size: 0.6rem;\n    padding-right: 0.1rem;\n    background-color: #fff;\n  }\n\n  span:nth-child(2) {\n    margin-bottom: 1rem;\n  }\n`;\nconst BottomInfoBar = styled.div`\n  position: absolute;\n  top: -1rem;\n  left: 0;\n  width: 100%;\n  height: 1rem;\n  font-size: 0.6rem;\n  padding-top: 0.5rem;\n  display: none;\n  justify-content: space-between;\n  transform: rotate(180deg);\n  /* border: 1px solid red; */\n\n  span {\n    transform: rotate(-15deg);\n    /* background-color: #fff; */\n  }\n\n  @media ${device.tabletS} {\n    display: flex;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Reports.js",["200"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport D3Graph from \"../Shared/D3Graph\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectCurrentUser,\n  selectCurrentUserStocks,\n} from \"../../redux/user/user-selectors\";\nimport {\n  selectTickerData,\n  selectShowAllDivs,\n} from \"../../redux/stocks/stocks-selectors\";\nimport HowManyStocks from \"./ReportComponents/HowManyStocks\";\n\nconst Reports = ({\n  selectCurrentUser,\n  selectCurrentUserStocks,\n  selectTickerData,\n  selectShowAllDivs,\n}) => {\n  return (\n    <Container>\n      <h1>Analysis Report:</h1>\n      <Wrapper>\n        <ReportWrapper>\n          <HowManyStocks\n            stocks={selectCurrentUserStocks}\n            user={selectCurrentUser}\n            tickers={selectTickerData}\n            divs={selectShowAllDivs}\n          />\n        </ReportWrapper>\n      </Wrapper>\n    </Container>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  selectCurrentUser: selectCurrentUser,\n  selectCurrentUserStocks: selectCurrentUserStocks,\n  selectTickerData: selectTickerData,\n  selectShowAllDivs: selectShowAllDivs,\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports);\n\n// styles\n\nconst Container = styled.div`\n  min-height: 100vh;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ReportWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/HowManyStocks.js",["201","202"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst HowManyStocks = ({ stocks, user, tickers, divs }) => {\n  const [mostDividends, setMostDividends] = useState(null);\n  useEffect(() => {\n    console.log(mostDividends);\n    if (!mostDividends) {\n      getMostValuable(stocks);\n    }\n  }, [mostDividends]);\n  const totalPayouts = (arr) => {\n    return arr.payouts\n      ? arr.payouts.reduce(\n          (a, b) =>\n            parseFloat(a.amount).toFixed(2) + parseFloat(b.amount).toFixed(2)\n        )\n      : 0;\n  };\n  const getMostValuable = (arr) => {\n    let arrWithPayouts = arr.map((stock) =>\n      stock.payouts\n        ? { ...stock, total: totalPayouts(stock.payouts) }\n        : { ...stock, total: 0 }\n    );\n\n    console.log(arrWithPayouts);\n  };\n  return (\n    <Container>\n      <P>\n        You currently have <b>{stocks.length}</b>\n        {stocks.length === 1 ? \" holding\" : \" holdings\"}.\n      </P>\n      {mostDividends ? (\n        <P>\n          Your most dividend paid stock is {mostDividends.name}\n          <span>({mostDividends.ticker})</span>\n        </P>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default HowManyStocks;\n\n// styles\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst P = styled.p`\n  font-size: 1.3rem;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/reportWebVitals.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/stocksContext.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":22,"column":6,"nodeType":"209","endLine":22,"endColumn":12,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":22,"column":9,"nodeType":"213","messageId":"214","endLine":22,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":44,"column":6,"nodeType":"209","endLine":44,"endColumn":35,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"207","severity":1,"message":"218","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":12,"suggestions":"219"},{"ruleId":"207","severity":1,"message":"220","line":45,"column":6,"nodeType":"209","endLine":45,"endColumn":25,"suggestions":"221"},{"ruleId":"211","severity":1,"message":"222","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"217","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"223","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":26},{"ruleId":"211","severity":1,"message":"224","line":34,"column":11,"nodeType":"213","messageId":"214","endLine":34,"endColumn":18},{"ruleId":"211","severity":1,"message":"225","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":24},{"ruleId":"211","severity":1,"message":"217","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"226","line":6,"column":10,"nodeType":"213","messageId":"214","endLine":6,"endColumn":21},{"ruleId":"211","severity":1,"message":"227","line":98,"column":7,"nodeType":"213","messageId":"214","endLine":98,"endColumn":18},{"ruleId":"211","severity":1,"message":"217","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"207","severity":1,"message":"228","line":53,"column":6,"nodeType":"209","endLine":53,"endColumn":31,"suggestions":"229"},{"ruleId":"211","severity":1,"message":"230","line":431,"column":7,"nodeType":"213","messageId":"214","endLine":431,"endColumn":21},{"ruleId":"211","severity":1,"message":"217","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"231","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"217","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"207","severity":1,"message":"232","line":19,"column":6,"nodeType":"209","endLine":19,"endColumn":28,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"234","line":97,"column":13,"nodeType":"213","messageId":"214","endLine":97,"endColumn":18},{"ruleId":"211","severity":1,"message":"235","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":15},{"ruleId":"211","severity":1,"message":"236","line":5,"column":25,"nodeType":"213","messageId":"214","endLine":5,"endColumn":41},{"ruleId":"207","severity":1,"message":"237","line":11,"column":6,"nodeType":"209","endLine":11,"endColumn":21,"suggestions":"238"},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["241"],"no-unused-vars","'stocks' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'handleSearchFilter' and 'updateUserStocks'. Either include them or remove the dependency array.",["242"],"'device' is defined but never used.","React Hook useEffect has missing dependencies: 'getStocks', 'selectAllStocks', 'setCurrentUser', and 'setStocks'. Either include them or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.",["243"],"React Hook useEffect has missing dependencies: 'alreadyAddedCheck', 'filterResults', 'filteredResults.length', and 'selectCurrentUserStocks'. Either include them or remove the dependency array.",["244"],"'nas' is defined but never used.","'GoogleSignInButton' is defined but never used.","'userRef' is assigned a value but never used.","'setCurrentUser' is defined but never used.","'spinnerIcon' is assigned a value but never used.","'LoaderSmall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTotal', 'stock.ticker', and 'stockPayouts.length'. Either include them or remove the dependency array. If 'setStockPayouts' needs the current value of 'stock.ticker', you can also switch to useReducer instead of useState and read 'stock.ticker' in the reducer.",["245"],"'ViewAllWrapper' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'arr', 'drawChart', and 'makeInfoValues'. Either include them or remove the dependency array.",["246"],"'cents' is assigned a value but never used.","'D3Graph' is defined but never used.","'setMostDividends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMostValuable' and 'stocks'. Either include them or remove the dependency array.",["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [setCurrentUser]",{"range":"262","text":"263"},"Update the dependencies array to be: [setCurrentUserStocks, query, updateUserStocks, handleSearchFilter]",{"range":"264","text":"265"},"Update the dependencies array to be: [getStocks, selectAllStocks, setCurrentUser, setStocks]",{"range":"266","text":"267"},"Update the dependencies array to be: [alreadyAddedCheck, filterResults, filteredResults.length, query, selectCurrentUserStocks, tickersArr]",{"range":"268","text":"269"},"Update the dependencies array to be: [getTotal, selectCurrentUserStocks, stock.ticker, stockPayouts.length]",{"range":"270","text":"271"},"Update the dependencies array to be: [valueArr, infoValues, arr, makeInfoValues, drawChart]",{"range":"272","text":"273"},"Update the dependencies array to be: [getMostValuable, mostDividends, stocks]",{"range":"274","text":"275"},[828,834],"[setCurrentUser]",[1656,1685],"[setCurrentUserStocks, query, updateUserStocks, handleSearchFilter]",[1240,1246],"[getStocks, selectAllStocks, setCurrentUser, setStocks]",[1819,1838],"[alreadyAddedCheck, filterResults, filteredResults.length, query, selectCurrentUserStocks, tickersArr]",[1905,1930],"[getTotal, selectCurrentUserStocks, stock.ticker, stockPayouts.length]",[541,563],"[valueArr, infoValues, arr, makeInfoValues, drawChart]",[334,349],"[getMostValuable, mostDividends, stocks]"]