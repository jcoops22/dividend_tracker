[{"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Header.js":"1","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/App.js":"2","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksList.js":"3","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Toolbar.js":"4","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddForm.js":"5","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Home.js":"6","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SearchStocks.js":"7","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/stockUtilities.js":"8","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/nyseOBJ.js":"9","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Landing.js":"10","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SignIn.js":"11","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Buttons/GoogleSignInButton.js":"12","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Register.js":"13","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Firebase/firebase.js":"14","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksWrapper.js":"15","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Drawer.js":"16","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StockToolbar.js":"17","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/index.js":"18","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/LoadingIcon.js":"19","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/mediaquery.js":"20","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/TransformIcon.js":"21","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/DividendsForm.js":"22","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ViewAll.js":"23","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Footer.js":"24","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddMissing.js":"25","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/D3Graph.js":"26","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Reports.js":"27","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/HowManyStocks.js":"28","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/reportWebVitals.js":"29","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/StocksProvider.js":"30","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/UserProvider.js":"31","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/ErrorComponent.js":"32","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/MostDividends.js":"33","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/UtilitiesRow.js":"34","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/TickerIcon.js":"35","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/DividendTotal.js":"36","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/IncludeArchived.js":"37"},{"size":2891,"mtime":1614810854593,"results":"38","hashOfConfig":"39"},{"size":1802,"mtime":1615774926226,"results":"40","hashOfConfig":"39"},{"size":10076,"mtime":1630744051972,"results":"41","hashOfConfig":"39"},{"size":3027,"mtime":1614885385858,"results":"42","hashOfConfig":"39"},{"size":1357,"mtime":1614805701102,"results":"43","hashOfConfig":"39"},{"size":2153,"mtime":1614904058267,"results":"44","hashOfConfig":"39"},{"size":10339,"mtime":1615243603882,"results":"45","hashOfConfig":"39"},{"size":9615,"mtime":1630712258024,"results":"46","hashOfConfig":"39"},{"size":196095,"mtime":1608023988086,"results":"47","hashOfConfig":"39"},{"size":13178,"mtime":1615244831868,"results":"48","hashOfConfig":"39"},{"size":6675,"mtime":1614793779246,"results":"49","hashOfConfig":"39"},{"size":266,"mtime":1608090369026,"results":"50","hashOfConfig":"39"},{"size":5855,"mtime":1614791382378,"results":"51","hashOfConfig":"39"},{"size":1437,"mtime":1613715263900,"results":"52","hashOfConfig":"39"},{"size":4421,"mtime":1630743927315,"results":"53","hashOfConfig":"39"},{"size":8001,"mtime":1630746049612,"results":"54","hashOfConfig":"39"},{"size":16059,"mtime":1630718274459,"results":"55","hashOfConfig":"39"},{"size":751,"mtime":1630299416204,"results":"56","hashOfConfig":"39"},{"size":3136,"mtime":1608567496065,"results":"57","hashOfConfig":"39"},{"size":591,"mtime":1601309934587,"results":"58","hashOfConfig":"39"},{"size":1328,"mtime":1608604373721,"results":"59","hashOfConfig":"39"},{"size":11831,"mtime":1630390740875,"results":"60","hashOfConfig":"39"},{"size":6535,"mtime":1614902908205,"results":"61","hashOfConfig":"39"},{"size":646,"mtime":1614097389266,"results":"62","hashOfConfig":"39"},{"size":4658,"mtime":1615243585700,"results":"63","hashOfConfig":"39"},{"size":11945,"mtime":1615773945116,"results":"64","hashOfConfig":"39"},{"size":2477,"mtime":1630389206165,"results":"65","hashOfConfig":"39"},{"size":480,"mtime":1613936854861,"results":"66","hashOfConfig":"39"},{"size":362,"mtime":1607318708302,"results":"67","hashOfConfig":"39"},{"size":2168,"mtime":1614805103384,"results":"68","hashOfConfig":"39"},{"size":998,"mtime":1615249579271,"results":"69","hashOfConfig":"39"},{"size":455,"mtime":1613751143896,"results":"70","hashOfConfig":"39"},{"size":1279,"mtime":1615774606377,"results":"71","hashOfConfig":"39"},{"size":1922,"mtime":1630745077191,"results":"72","hashOfConfig":"39"},{"size":1385,"mtime":1615744773139,"results":"73","hashOfConfig":"39"},{"size":1177,"mtime":1630390793681,"results":"74","hashOfConfig":"39"},{"size":1684,"mtime":1630744782986,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1211qm8",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Header.js",[],["164","165"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/App.js",["166"],"import \"./App.css\";\nimport React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { auth } from \"./Components/Firebase/firebase\";\nimport Home from \"./Components/Home/Home\";\nimport Landing from \"./Components/Home/Landing\";\nimport SignIn from \"./Components/Home/SignIn\";\nimport Reports from \"./Components/Home/Reports\";\nimport { UserContext } from \"./Components/Context/UserProvider\";\n\nfunction App({ history }) {\n  const { setCurrentUserAction, currentUser } = useContext(UserContext);\n  useEffect(() => {\n    // check for user in localStorage\n    let user = JSON.parse(window.localStorage.getItem(\"currentUser\"));\n    setCurrentUserAction(user);\n    // listen for changes like sign out\n    const unsub = auth.onAuthStateChanged(async (user) => {\n      if (!user) {\n        setCurrentUserAction(null);\n      }\n    });\n    // clean up\n    return () => {\n      unsub();\n    };\n  }, [auth]);\n\n  return (\n    <Container className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() => (!currentUser ? <SignIn /> : <Redirect to=\"/home\" />)}\n        />\n        <Route\n          exact\n          path=\"/home\"\n          render={() =>\n            currentUser ? <Home history={history} /> : <Landing />\n          }\n        />\n        <Route\n          exact\n          path=\"/reports\"\n          render={() =>\n            currentUser ? <Reports history={history} /> : <Redirect to=\"/\" />\n          }\n        />\n        <Route path=\"*\" component={Landing} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default withRouter(App);\n// styles\nconst Container = styled.div`\n  /* border: 2px solid blue; */\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksList.js",["167"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Toolbar.js",["168","169"],"import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport { withRouter } from \"react-router-dom\";\nimport AddForm from \"../Home/AddForm\";\nimport ViewAll from \"../Home/ViewAll\";\nimport { StocksContext } from \"../Context/StocksProvider\";\n\nconst Toolbar = ({ history }) => {\n  const { showAllDivs, showAddForm, setShowAddForm } = useContext(\n    StocksContext\n  );\n  const [add] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608615849/Dividend%20Tracker/Icons/Stock%20Toolbar/plus-svgrepo-com_mtsovt.svg\"\n  );\n  const [reportIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1614794559/Dividend%20Tracker/Icons/analytics-report-svgrepo-com_lucomp.svg\"\n  );\n  // const [showAddForm, setShowAddForm] = useState(false);\n  const [showViewAllForm, setShowViewAllForm] = useState(\n    showAllDivs.show || false\n  );\n\n  useEffect(() => {\n    setShowViewAllForm(showAllDivs.show);\n  }, [showAllDivs, showViewAllForm, showAllDivs]);\n\n  return (\n    <Container\n      onClick={() => {\n        return showAddForm ? setShowAddForm(false) : null;\n      }}\n    >\n      <ButtonWrapper>\n        <ReportButton onClick={() => history.push(\"/reports\")}>\n          Reports\n          <img src={reportIcon} alt=\"reports\" />\n        </ReportButton>\n      </ButtonWrapper>\n      <ButtonWrapper>\n        <AddTicker onClick={() => setShowAddForm(true)}>\n          <span>Add stock</span>\n          <img src={add} alt=\"add\" />\n        </AddTicker>\n      </ButtonWrapper>\n      {showAddForm ? <AddForm /> : null}\n      {showViewAllForm ? <ViewAll payouts={showAllDivs.payouts} /> : null}\n    </Container>\n  );\n};\n\nexport default withRouter(Toolbar);\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n  opacity: 0;\n  animation: drop_toolbar_down 0.5s 1s forwards;\n  background-color: #fff;\n  border-bottom: 2px solid #999;\n  /* border: 1px solid red; */\n\n  @keyframes drop_toolbar_down {\n    to {\n      opacity: 1;\n      padding: 0.5rem;\n      height: 4.25rem;\n    }\n  }\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3rem;\n  background-color: #fff;\n  /* border: 1px solid red; */\n`;\nconst ReportButton = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 1rem;\n  box-shadow: 2px 2px 8px 0 #999;\n  background-color: #fff;\n  cursor: pointer;\n  /* border: 1px solid orange; */\n\n  img {\n    margin-left: 1rem;\n    width: 2rem;\n  }\n`;\nconst AddTicker = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 1rem;\n  box-shadow: 2px 2px 8px 0 #999;\n  background-color: #fff;\n  cursor: pointer;\n  /* border: 1px solid orange; */\n\n  img {\n    margin-left: 1rem;\n    width: 2rem;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddForm.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Home.js",["170"],"import React, { useEffect, useContext, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery.js\";\nimport { auth } from \"../Firebase/firebase\";\nimport Header from \"../Shared/Header\";\nimport Toolbar from \"../Shared/Toolbar\";\nimport StocksList from \"./StocksList\";\nimport LoadingIcon from \"../Shared/LoadingIcon\";\nimport { StocksContext } from \"../Context/StocksProvider\";\nimport { UserContext } from \"../Context/UserProvider\";\n\nconst Home = ({ history }) => {\n  const { loading, getStocks, stocks } = useContext(StocksContext);\n  const { currentUser } = useContext(UserContext);\n  const navbar = useRef();\n  // scroll pos for showHideNavbar func\n  var prevScrollpos = window.pageYOffset;\n\n  useEffect(() => {\n    // get stocks from firebase or retrieve them from localStorage\n    if (!stocks) {\n      getStocks();\n    }\n    // instiate event\n    window.addEventListener(\"scroll\", showHideNavbar);\n    // clean up\n    return () => {\n      window.removeEventListener(\"scroll\", showHideNavbar);\n    };\n  }, [auth, stocks, navbar]);\n\n  const showHideNavbar = () => {\n    /* When the user scrolls down, hide the navbar. When the user scrolls up, show the navbar */\n    var currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos) {\n      navbar.current.style.top = \"0\";\n    } else {\n      navbar.current.style.top = `-3.3rem`;\n    }\n    prevScrollpos = currentScrollPos;\n  };\n\n  return (\n    <Container>\n      <Sticky ref={navbar}>\n        <Header\n          text={\"Dividend Tracker\"}\n          user={currentUser.first}\n          auth={auth}\n          history={history}\n        />\n        <Toolbar stocks={stocks} />\n      </Sticky>\n      <StocksList />\n      {loading ? <LoadingIcon big={true} height={\"6rem\"} /> : null}\n    </Container>\n  );\n};\n\nexport default Home;\n\n// styles\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  padding-bottom: 4rem;\n  /* border: 1px solid red; */\n`;\nconst Sticky = styled.div`\n  position: static;\n  top: 0;\n  z-index: 1;\n  width: 100%;\n  transition-duration: 0.5s;\n\n  @media ${device.tabletS} {\n    position: fixed;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SearchStocks.js",["171"],"import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { addStock, deleteStock } from \"../../resources/stockUtilities\";\nimport TransformIcon from \"../Shared/TransformIcon\";\nimport AddMissing from \"./AddMissing\";\nimport { UserContext } from \"../Context/UserProvider\";\nimport { StocksContext } from \"../Context/StocksProvider\";\n\nconst SearchStocks = () => {\n  const [loading, setLoading] = useState(false);\n  const {\n    currentUser,\n    currentUserStocks,\n    setCurrentUserStocksAction,\n  } = useContext(UserContext);\n  const { stocks } = useContext(StocksContext);\n  const [query, setQuery] = useState(\"\");\n  const [tickersArr, setTickersArr] = useState(null);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [alreadyAdded, setAlreadyAdded] = useState(null);\n  const [showAddMissing, setShowAddMissing] = useState(false);\n  const [alreadyAddedIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608509562/Dividend%20Tracker/Icons/SearchResults/check-svgrepo-com_1_g7pyz8.svg\"\n  );\n  const [addToListIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608506065/Dividend%20Tracker/Icons/SearchResults/add-svgrepo-com_gihegx.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n\n  useEffect(() => {\n    // console.log(!!query && filteredResults.length === 0);\n    if (!tickersArr) {\n      buildTickersArr(currentUserStocks);\n    }\n    // set the focus on the input on render\n    document.querySelector(\"#search_input\").focus();\n    filterResults(query);\n    alreadyAddedCheck(query);\n  }, [query, tickersArr]);\n\n  // filter the query through the array of stocks\n  const filterResults = (query) => {\n    let temp = stocks.filter((stock) => {\n      return stock.ticker.toLowerCase() === query.toLowerCase() ? stock : null;\n    });\n    setFilteredResults(temp);\n  };\n  // make ticker array to compare whats been added already\n  const buildTickersArr = (arr) => {\n    setTickersArr(\n      arr.map((stockObj) => {\n        return stockObj.ticker;\n      })\n    );\n  };\n  // adding stock function\n  const handleAddStock = async (user, stock) => {\n    setLoading(true);\n    let timeStampedStock = { ...stock, added: new Date().getTime() };\n    let success = await addStock(user, timeStampedStock);\n    if (success.message === undefined) {\n      console.log(success);\n      setCurrentUserStocksAction(currentUserStocks.concat(timeStampedStock));\n      window.localStorage.setItem(\n        \"currentUser\",\n        JSON.stringify({\n          ...currentUser,\n          stocks: currentUserStocks.concat(timeStampedStock),\n        })\n      );\n      setAlreadyAdded(!alreadyAdded);\n      let arr = tickersArr;\n      arr.push(query.toUpperCase());\n      setTickersArr(arr);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n  // determine the icons for whats been added\n  const alreadyAddedCheck = (query) => {\n    if (tickersArr) {\n      setAlreadyAdded(\n        !!tickersArr.some((ticker) => query.toUpperCase() === ticker)\n      );\n    }\n  };\n  // handle unchecking the match aka deleting\n  const handleDelete = async (user, stock) => {\n    setLoading(true);\n    let success = await deleteStock(user, stock);\n    if (success.message === undefined) {\n      console.log(\"success\");\n      setCurrentUserStocksAction(\n        currentUserStocks.filter((stocks) => stocks.ticker !== stock.ticker)\n      );\n      setAlreadyAdded(!alreadyAdded);\n      setTickersArr(\n        tickersArr.filter((ticker) => query.toUpperCase() !== ticker)\n      );\n      setLoading(false);\n    } else {\n      setLoading(false);\n      console.log(success.message);\n    }\n  };\n\n  return (\n    <Container id={\"searchResults\"} onClick={(e) => e.stopPropagation()}>\n      <h5>Search:</h5>\n      <InputWrapper>\n        <Input\n          autoComplete=\"off\"\n          id=\"search_input\"\n          type=\"text\"\n          placeholder=\"Enter Symbol/Ticker value\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          style={query.length ? { textTransform: \"uppercase\" } : null}\n        />\n        {query.length ? (\n          <span onClick={() => setQuery(\"\")}>&#10005; </span>\n        ) : null}\n      </InputWrapper>\n      <Results>\n        <h4>Results:</h4>\n        {query && query !== \" \" ? (\n          <ResultsWrapper>\n            {filteredResults.slice(0, 100).map((stock, ind) => (\n              <ResultRow key={ind}>\n                <Col width={\"30%\"}>\n                  <label>Ticker</label>\n                  <p>{stock.ticker}</p>\n                </Col>\n                <Col width={\"70%\"}>\n                  <label>Company</label>\n                  <Row>\n                    <p>{stock.name}</p>\n                  </Row>\n                </Col>\n                {loading ? (\n                  <AlreadyAddedLoader>\n                    <img src={littleLoader} alt=\"little loader\" />\n                  </AlreadyAddedLoader>\n                ) : (\n                  <IconsDiv\n                    onClick={() =>\n                      alreadyAdded\n                        ? handleDelete(currentUser.id, stock)\n                        : handleAddStock(currentUser.id, stock)\n                    }\n                  >\n                    <TransformIcon\n                      first={addToListIcon}\n                      second={alreadyAddedIcon}\n                      w1={\"1.5rem\"}\n                      w2={\"1.5rem\"}\n                      transform={alreadyAdded}\n                    />\n                  </IconsDiv>\n                )}\n              </ResultRow>\n            ))}\n          </ResultsWrapper>\n        ) : null}\n        <ResultsWrapper>\n          {filteredResults.length === 0 && query ? (\n            <NoResultRow>\n              {!showAddMissing ? <p>Sorry, no results</p> : null}\n              <div>\n                {!showAddMissing ? (\n                  <AddMissingText onClick={() => setShowAddMissing(true)}>\n                    Need to add a missing stock/fund?\n                  </AddMissingText>\n                ) : (\n                  <span\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      width: \"80%\",\n                    }}\n                  >\n                    <span style={{ color: \"#7249d1\" }}>Add stock:</span>\n                    <span\n                      style={{\n                        width: \"1rem\",\n                        cursor: \"pointer\",\n                        color: \"#FF3501\",\n                      }}\n                      onClick={() => setShowAddMissing(false)}\n                    >\n                      &#10005;\n                    </span>\n                  </span>\n                )}\n              </div>\n              {showAddMissing ? <AddMissing user={currentUser.id} /> : null}\n            </NoResultRow>\n          ) : null}\n        </ResultsWrapper>\n      </Results>\n    </Container>\n  );\n};\n\nexport default SearchStocks;\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 530px;\n  height: 20rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #fff;\n  font-family: \"Exo\", sans-serif;\n  /* border: 1px solid #333; */\n\n  h5 {\n    width: 100%;\n    padding-left: 2rem;\n    font-size: 1rem;\n    /* border: 1px solid red; */\n  }\n`;\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 3rem;\n  padding: 0 0.3rem;\n  margin: 0.5rem 0;\n  border-radius: 3px;\n  border: 2px solid #7249d1;\n\n  span {\n    position: absolute;\n    left: calc(100% - 1.5rem);\n    width: 2rem;\n    color: #ff3501;\n    opacity: 0.7;\n    cursor: pointer;\n    /* border: 1px solid red; */\n  }\n`;\nconst Input = styled.input`\n  &:focus {\n    outline: none;\n    /* outline-color: #7249d1; */\n  }\n  position: relative;\n  width: 220px;\n  padding: 0.4rem;\n  font-size: 17px;\n  border-radius: 3px;\n  font-family: \"Exo\", sans-serif;\n  border: none;\n  /* border: 2px solid #7249d1; */\n`;\nconst Results = styled.div`\n  width: 100%;\n  /* border: 2px solid orange; */\n\n  h4 {\n    padding-top: 1.5rem;\n    margin: 0.4rem 0;\n  }\n`;\nconst ResultsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: scroll;\n  /* border: 1px solid red; */\n`;\nconst ResultRow = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 0 1rem;\n  /* box-shadow: 2px 3px 8px 0 #999; */\n  cursor: default;\n  /* border: 1px solid red; */\n\n  label {\n    height: 1rem;\n    font-size: 0.9rem;\n    text-align: right;\n    padding-right: 1rem;\n    /* border: 2px solid red; */\n  }\n\n  p {\n    font-size: 1.2rem;\n    /* border: 2px solid red; */\n  }\n`;\nconst NoResultRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 0 1rem;\n  cursor: default;\n  /* border: 1px solid red; */\n\n  p {\n    font-size: 1.2rem;\n    /* border: 2px solid red; */\n  }\n`;\nconst AddMissingText = styled.span`\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n  color: #7249d1;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  width: ${(props) => props.width};\n  /* border: 1px solid green; */\n`;\nconst IconsDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  /* border: 1px solid red; */\n`;\nconst AlreadyAddedLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n  cursor: pointer;\n  animation: spin_already_added_loader 1s linear forwards infinite;\n  /* border: 1px solid red; */\n\n  img {\n    width: 1.5rem;\n  }\n\n  @keyframes spin_already_added_loader {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/stockUtilities.js",["172"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/nyseOBJ.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Landing.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/SignIn.js",["173","174"],"import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { UserContext } from \"../Context/UserProvider\";\nimport { auth, firestore } from \"../Firebase/firebase\";\nimport Register from \"./Register\";\nimport GoogleSignInButton from \"../Shared/Buttons/GoogleSignInButton\";\nimport ErrorComponent from \"../Shared/ErrorComponent\";\n\nconst SignIn = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const { setCurrentUserAction } = useContext(UserContext);\n  const [investingForHeader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1613778050/Dividend%20Tracker/Icons/undraw_investing_7u74_d1vsuv.svg\"\n  );\n  const [littleLoader] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608614181/Dividend%20Tracker/Icons/SearchResults/loading-loader-svgrepo-com_urrwap.svg\"\n  );\n\n  useEffect(() => {}, [errorMessage]);\n  const handleSubmit = async (e) => {\n    // prevent refresh\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      let { user } = await auth.signInWithEmailAndPassword(email, password);\n      let userRef = await firestore\n        .doc(`users/${user.uid}`)\n        .get()\n        .then((data) => {\n          let user = data.data();\n          // set current user\n          setCurrentUserAction(user);\n          // set in localStorage storage as well\n          window.localStorage.setItem(\"currentUser\", JSON.stringify(user));\n          history.push(\"/home\");\n          return;\n        });\n    } catch (err) {\n      setLoading(false);\n      // alert(err.message);\n      setErrorMessage(err.message);\n      console.error(err);\n    }\n  };\n  // for loading the registration form\n  const handleLoadRegistration = () => {\n    let wrapper = document.querySelector(\"#register_wrapper\");\n\n    setTimeout(() => {\n      wrapper.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n    }, 100);\n    setShowRegistrationForm(true);\n  };\n  return (\n    <Container>\n      <Header>\n        <Link to=\"/\">\n          <h1>\n            Dividend Tracker <img src={investingForHeader} alt=\"cash\" />\n          </h1>\n        </Link>\n      </Header>\n      <Wrapper opacity={loading ? \"0.5\" : null}>\n        <h3>Sign In to your account</h3>\n        <Form\n          opacity={showRegistrationForm ? \"0.5\" : null}\n          events={showRegistrationForm ? \"none\" : null}\n        >\n          {errorMessage ? <ErrorComponent message={errorMessage} /> : null}\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            onChange={(e) => {\n              setErrorMessage(null);\n              setEmail(e.target.value);\n            }}\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"enter password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n              setErrorMessage(null);\n            }}\n          />\n\n          <Button\n            disabled={loading}\n            onClick={(e) => {\n              handleSubmit(e);\n            }}\n          >\n            Sign In\n          </Button>\n        </Form>\n        <RegWrapper id=\"register_wrapper\">\n          {showRegistrationForm ? null : (\n            <NoAccount>\n              Don't have an account?\n              <span onClick={() => handleLoadRegistration(true)}>Register</span>\n            </NoAccount>\n          )}\n          {showRegistrationForm ? (\n            <Register\n              setShowRegistrationForm={setShowRegistrationForm}\n              fromSignIn={true}\n            />\n          ) : null}\n        </RegWrapper>\n\n        {loading ? <Loader src={littleLoader} alt=\"loading\" /> : null}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default withRouter(SignIn);\n\n// styles\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  /* border: 1px solid red; */\n`;\nconst Header = styled.div`\n  position: relative;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 3rem;\n  background-color: #fff;\n\n  h1 {\n    display: flex;\n    align-items: center;\n    margin-left: 2rem;\n    font-size: 1.5rem;\n    color: #7249d1;\n    /* border: 1px solid red; */\n  }\n\n  img {\n    width: 2rem;\n    margin-left: 1rem;\n    /* border: 1px solid red; */\n  }\n\n  @media ${device.tabletS} {\n    position: sticky;\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: ${(props) => props.opacity};\n  /* border: 1px solid red; */\n\n  h3 {\n    margin: 6rem 0 2rem;\n    /* border: 1px solid red; */\n  }\n\n  @keyframes spin_loader_at_sign_in {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\nconst Loader = styled.img`\n  width: 2rem;\n  animation: spin_loader_at_sign_in 1s linear infinite;\n`;\n\nconst Form = styled.form`\n  position: relative;\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 2rem;\n  opacity: ${(props) => props.opacity};\n  pointer-events: ${(props) => props.events};\n  /* border: 1px solid red; */\n\n  label {\n    margin-top: 2rem;\n  }\n\n  input {\n    padding: 0.4rem 1rem;\n    width: 80%;\n    font-size: 18px;\n  }\n\n  input::placeholder {\n    color: #ccc;\n  }\n`;\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 6.3rem;\n  height: 3.3rem;\n  margin: 3rem 0;\n  font-size: 1rem;\n  font-weight: 200;\n  color: #333;\n  font-family: \"Exo\", sans-serif;\n  background-color: #27d67b;\n  border-radius: 3px;\n  border: none;\n  outline: none;\n  /* border: 1px solid red; */\n`;\nconst RegWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 2rem 0;\n  opacity: 0;\n  animation: fade_reg_wrapper_in 1s linear forwards;\n  /* border: 1px solid blue; */\n\n  span {\n    &:hover {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n    color: #7249d1;\n    margin-left: 1rem;\n  }\n\n  @keyframes fade_reg_wrapper_in {\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst NoAccount = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Buttons/GoogleSignInButton.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Register.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Firebase/firebase.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StocksWrapper.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Drawer.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/StockToolbar.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/index.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/LoadingIcon.js",["175","176","177"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst LoadingIcon = ({ height, big, visibiliy, marginTop }) => {\n  const [spinnerIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1608524427/Dividend%20Tracker/Icons/cube-svgrepo-com_hiothk.svg\"\n  );\n\n  // <LoaderSmall visibiliy={visibiliy} />\n  return (\n    <div>\n      {big ? (\n        <Loader>\n          <Wrapper height={height}>\n            <Spinner bg=\"red\" height=\"35%\" aniName=\"height1\" delay=\"0.2s\" />\n            <Spinner bg=\"blue\" height=\"80%\" aniName=\"height2\" delay=\"0.4s\" />\n            <Spinner bg=\"green\" height=\"20%\" aniName=\"height3\" delay=\"0.6s\" />\n            <Spinner bg=\"purple\" height=\"70%\" aniName=\"height4\" delay=\"0.8s\" />\n            <Spinner bg=\"orange\" height=\"50%\" aniName=\"height5\" delay=\"1s\" />\n          </Wrapper>\n        </Loader>\n      ) : (\n        <Wrapper visibiliy={visibiliy} height={height} marginTop={marginTop}>\n          <Spinner bg=\"red\" height=\"35%\" aniName=\"height1\" delay=\"0.2s\" />\n          <Spinner bg=\"blue\" height=\"80%\" aniName=\"height2\" delay=\"0.4s\" />\n          <Spinner bg=\"green\" height=\"20%\" aniName=\"height3\" delay=\"0.6s\" />\n          <Spinner bg=\"purple\" height=\"70%\" aniName=\"height4\" delay=\"0.8s\" />\n          <Spinner bg=\"orange\" height=\"50%\" aniName=\"height5\" delay=\"1s\" />\n        </Wrapper>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingIcon;\n\n// styels\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Wrapper = styled.div`\n  height: ${(props) => props.height};\n  width: 9rem;\n  transform: rotate(180deg);\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: ${(props) => props.marginTop};\n  visibility: ${(props) => props.visibiliy};\n  border-top: 4px solid #999;\n  /* border: 1px solid red; */\n`;\nconst Spinner = styled.div`\n  width: 30px;\n  height: ${(props) => props.height};\n  background-color: ${(props) => props.bg};\n  animation: 0.5s alternate infinite forwards;\n  animation-name: ${(props) => props.aniName};\n  /* animation-delay: ${(props) => props.delay}; */\n  /* border: 1px solid red; */\n\n  @keyframes height1 {\n    to {\n      height: 20%;\n    }\n  }\n\n  @keyframes height2 {\n    to {\n      height: 90%;\n    }\n  }\n  @keyframes height3 {\n    to {\n      height: 60%;\n    }\n  }\n  @keyframes height4 {\n    to {\n      height: 30%;\n    }\n  }\n  @keyframes height5 {\n    to {\n      height: 100%;\n    }\n  }\n`;\nconst LoaderSmall = styled.div`\n  position: absolute;\n  top: calc(50% - 15px);\n  left: calc(50% - 15px);\n  height: 30px;\n  width: 30px;\n  opacity: 1;\n  visibility: ${(props) => props.visibiliy};\n  animation: rotate_drawer_loader 0.5s ease-in infinite alternate;\n  animation-delay: ${(props) => props.delay};\n  border-radius: 50%;\n  border: 3px solid red;\n  border-top-color: blue;\n\n  @keyframes rotate_drawer_loader {\n    to {\n      border-radius: 0%;\n      transform: rotate(408deg);\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/resources/mediaquery.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/TransformIcon.js",["178"],"import React, { useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst TransformIcon = ({ first, second, transform, w1, w2 }) => {\n  useEffect(() => {\n    // console.log(transform);\n  }, [transform]);\n\n  return (\n    <Container>\n      {transform ? (\n        <Second width={w2}>\n          <img src={second} alt=\"second\" />\n        </Second>\n      ) : (\n        <First width={w1}>\n          <img src={first} alt=\"first\" />\n        </First>\n      )}\n    </Container>\n  );\n};\n\nexport default TransformIcon;\n\n// styles\nconst ImageDiv = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${(props) => props.width};\n\n  img {\n    width: 100%;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border: 1px solid red; */\n`;\nconst First = styled.div`\n  ${ImageDiv}\n  transform: scale(1);\n  opacity: 1;\n  animation: whirl_image_out 0.3s forwards;\n\n  @keyframes whirl_image_out {\n    from {\n      transform: scale(0.1);\n      opacity: 0;\n    }\n  }\n`;\nconst Second = styled.div`\n  ${ImageDiv}\n  opacity: 0;\n  transform: scale(0.1);\n  animation: whirl_image_in 0.3s forwards;\n\n  @keyframes whirl_image_in {\n    to {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/DividendsForm.js",["179"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ViewAll.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/Footer.js",["180"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      Developed by:\n      <a\n        href=\"https://hungry-saha-ad752d.netlify.app/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Jonathan Cooper\n      </a>\n    </Container>\n  );\n};\n\nexport default Footer;\n\n// styled\nconst Container = styled.div`\n  height: 10rem;\n  background-color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.6rem;\n  color: #fff;\n\n  a {\n    color: #fff;\n    margin-left: 1rem;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/AddMissing.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/D3Graph.js",["181","182","183","184","185"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { device } from \"../../resources/mediaquery\";\nimport * as d3 from \"d3\";\n\nconst D3Graph = ({\n  arr,\n  stock,\n  startTimer,\n  setStartTimer,\n  forceInfoUpdate,\n  loading,\n}) => {\n  const [valueArr, setValueArr] = useState(null);\n  const [infoValues, setInfoValues] = useState(null);\n  const [hoveredValue, setHoveredValue] = useState(null);\n  const [useTimeoutView, setUseTimeoutView] = useState(true);\n  const [showRefresh, setShowRefresh] = useState(false);\n  const [refreshMessage, setRefreshMessage] = useState(false);\n  const [refreshIcon] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1615498605/Dividend%20Tracker/Icons/refresh-svgrepo-com_rpdems.svg\"\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleDuplicateGraph);\n\n    // check for data the build the chart\n    if (!valueArr && !infoValues) {\n      makeValuesArray(arr);\n      makeInfoValues(arr);\n      setUseTimeoutView(true);\n    } else if (arr[0] !== undefined) {\n      // create the graph chart\n      setUseTimeoutView(false);\n      drawChart(\"100%\", \"90%\");\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", handleDuplicateGraph);\n    };\n  }, [\n    valueArr,\n    infoValues,\n    useTimeoutView,\n    showRefresh,\n    useTimeoutView,\n    loading,\n  ]);\n\n  // make a values array from the time series data\n  const makeValuesArray = (obj) => {\n    let arr = Object.entries(obj);\n    let values = arr\n      .slice(0, 100)\n      .reverse()\n      .map((val) => {\n        return val[1].value ? parseFloat(val[1].value.slice(1)) : null;\n      });\n    setValueArr(values.reverse());\n  };\n  // get first middle and last values for the infobar\n  const makeInfoValues = (obj) => {\n    let arrObj = Object.entries(obj).reverse();\n    if (arr[0] !== undefined) {\n      setInfoValues([\n        formatInfo(arrObj[2][1].lastUpdated),\n        formatInfo(arrObj[50][1].lastUpdated),\n        formatInfo(arrObj[99][1].lastUpdated),\n      ]);\n    } else {\n      return;\n    }\n  };\n  // format the info data\n  const formatInfo = (info) => {\n    let date = (info) => {\n      return info ? info.slice(5, 10).replace(\"-\", \"/\") : null;\n    };\n    let time = (info) => {\n      if (info) {\n        let rawTime = info.slice(11, -6);\n        return rawTime > 12 ? rawTime - 12 + \"pm\" : parseInt(rawTime) + \"am\";\n      }\n    };\n    return date(info) + \" \" + time(info);\n  };\n  // average for baseline value\n  const average = (array) => array.reduce((a, b) => a + b) / array.length;\n  // get the highest value\n  const getHigh = (array) => array.reduce((a, b) => (a > b ? a : b));\n  // get the lowest value\n  const getLow = (array) => array.reduce((a, b) => (a < b ? a : b));\n  // get correct cents\n  const getCents = (num) => {\n    if (num && num.toString().includes(\".\")) {\n      return num.toString().slice(-2).includes(\".\")\n        ? (num.toString() + 0).slice(-2)\n        : num.toString().slice(-2);\n    } else {\n      return \"00\";\n    }\n  };\n  // hide duplicate svgs on resize from mobile to fullscreen\n  const handleDuplicateGraph = () => {\n    let svgs = d3.selectAll(`#${stock.ticker} svg rect`);\n\n    if (svgs._groups[0].length >= 100 && window.innerWidth > 768) {\n      setShowRefresh(true);\n    }\n  };\n  // handle reloading the graph after hiding on resize\n  const handleRefresh = () => {\n    drawChart(\"100%\", \"90%\");\n    setShowRefresh(false);\n  };\n  // set timer if the API is on timeout\n\n  // D3 FUNC\n  const drawChart = (w, h) => {\n    let svgs = d3.selectAll(`#${stock.ticker} svg rect`);\n\n    if (svgs._groups[0].length >= 100) {\n      console.log(\"svgs._groups[0].length\");\n      handleDuplicateGraph();\n      // return;\n    }\n    const data = valueArr;\n    const baseLine = data ? data : [100];\n    const dbase = average(baseLine);\n    const high = getHigh(baseLine);\n    const low = getLow(baseLine) - getLow(baseLine) * 0.5;\n    // make the svg element\n    const svg = d3\n      .select(`#${stock.ticker}`)\n      .append(\"svg\")\n      .attr(\"width\", w)\n      .attr(\"height\", h);\n    // select all rect elements and pass the data\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .on(\"mouseover\", (e, d, i) => {\n        setHoveredValue(d);\n        d3.select(e.target)\n          .attr(\"transform\", \"scale(1, 1.1)\")\n          .attr(\"fill\", (d) => {\n            return d >= dbase\n              ? \"rgba(39, 214, 124,0.3)\"\n              : \"rgba(255, 52, 1,0.3)\";\n          });\n      })\n      .on(\"mouseleave\", () => {\n        d3.selectAll(\"rect\")\n          .attr(\"transform\", \"scale(1,1)\")\n          .attr(\"fill\", \"rgba(114, 73, 209,0.3)\");\n        setHoveredValue(null);\n      })\n      .transition()\n      .delay((d, i) => `${i}8`)\n      .duration(800)\n      .attr(\"x\", (d, i) => `${i}%`)\n      .attr(\"y\", (d, i) => 0)\n      .attr(\"width\", \"1%\")\n      .attr(\"height\", (d, i) => {\n        let cents = getCents(d);\n        let pennies = d * 100;\n        let highPennies = high * 100;\n        let lowestPennies = low * 100;\n        let prevNum = data[i >= 1 ? i - 1 : 0];\n        let difference = d - prevNum;\n        // calculate the percent change\n        const change = (a, b) => {\n          let dif = a - b;\n          return (dif / a) * 100;\n        };\n\n        // console.log(\"val\", d, \"comparing:\", parseInt(prevNum), parseInt(d));\n        // if (parseInt(prevNum) === parseInt(d)) {\n        //   console.log(\"Equals:\", parseInt(cents) * 0.3);\n        //   return parseInt(cents) * 0.333;\n        // } else if (parseInt(prevNum) >= parseInt(d)) {\n        //   console.log(\"Greater:\", parseInt(cents) * 0.5);\n        //   return parseInt(cents) * 0.6;\n        // } else if (parseInt(prevNum) <= parseInt(d)) {\n        //   console.log(\"Less:\", parseInt(\"1\" + cents));\n        //   return parseInt(\"1\" + cents) * 0.7;\n        // }\n\n        // console.log(\n        //   \"val:\",\n        //   d,\n        //   \"Pennies:\",\n        //   pennies,\n        //   \"HighPens:\",\n        //   highPennies,\n        //   \"result:\",\n        //   parseInt((pennies / highPennies) * 100)\n        // );\n        // console.log(parseInt((pennies / highPennies) * 100));\n        return parseInt((pennies / highPennies) * 100);\n      })\n      .style(\"stroke\", \"#7249d1\")\n      .style(\"stroke-width\", \"1px\")\n      .attr(\"fill\", \"rgba(114, 73, 209,0.3)\");\n\n    //%change = difference / original number * 100;\n    // 38/230 = .165 .165 x 100 = 16.5\n  };\n\n  return (\n    <Container>\n      {loading ? (\n        <p>Loading</p>\n      ) : (\n        <Wrapper>\n          <RefreshButton\n            onClick={() => {\n              forceInfoUpdate();\n              setShowRefresh(false);\n            }}\n            onMouseOver={() => setRefreshMessage(true)}\n            onMouseOut={() => setRefreshMessage(false)}\n          >\n            <img src={refreshIcon} alt=\"refresh graph\" />\n          </RefreshButton>\n          {refreshMessage ? (\n            <RefreshMessage>Refresh Graph</RefreshMessage>\n          ) : null}\n          {useTimeoutView || showRefresh ? (\n            <RefreshTimeoutWrapper>\n              {showRefresh ? (\n                <Refresh onClick={() => handleRefresh()}>Show Graph</Refresh>\n              ) : (\n                <TimeoutParagraph>API Timeout</TimeoutParagraph>\n              )}\n            </RefreshTimeoutWrapper>\n          ) : (\n            <Graph id={`${stock.ticker}`}>\n              <Legend>\n                {!hoveredValue ? (\n                  <p>\n                    Market Value <span>(last 7 trading days)</span>\n                  </p>\n                ) : (\n                  <HoverValParagraph\n                    color={\n                      hoveredValue >= average(valueArr) ? \"#27d67b\" : \"#FF3501\"\n                    }\n                  >\n                    Value: <span>${hoveredValue.toFixed(2)}</span>\n                  </HoverValParagraph>\n                )}\n              </Legend>\n              <LeftInfoBar>\n                {valueArr ? <span>0</span> : null}\n                {valueArr ? <span>${getHigh(valueArr).toFixed(2)}</span> : null}\n              </LeftInfoBar>\n              {infoValues ? (\n                <BottomInfoBar>\n                  {infoValues.map((i, ind) => (\n                    <span key={ind}>{i}</span>\n                  ))}\n                </BottomInfoBar>\n              ) : null}\n            </Graph>\n          )}\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n\nexport default D3Graph;\n\n// styles\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: fit-content;\n  padding-bottom: 1rem;\n  margin: 0 0.2rem;\n  /* border: 3px solid red; */\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nconst RefreshButton = styled.div`\n  &:hover {\n    img {\n      transform: rotate(270deg);\n    }\n  }\n  position: absolute;\n  top: 0;\n  left: calc(100% - 1.5rem);\n  z-index: 2;\n  display: none;\n  justify-content: center;\n  align-items: center;\n  width: 1.2rem;\n  height: 1.2rem;\n  border-radius: 50%;\n  cursor: pointer;\n  /* border: 1px solid orange; */\n\n  img {\n    width: 100%;\n    transition-duration: 0.6s;\n  }\n\n  @media ${device.tablet} {\n    display: flex;\n  }\n`;\nconst RefreshTimeoutWrapper = styled.div`\n  height: 8rem;\n  display: flex;\n  align-items: center;\n  /* border: 1px solid orange; */\n`;\nconst RefreshMessage = styled.p`\n  position: absolute;\n  top: 0;\n  left: calc(100% - 6.5rem);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  width: 6.5rem;\n  height: 1.5rem;\n  font-size: 0.6rem;\n  background-color: #fff;\n  padding: 0 0.5rem;\n  animation: slideRefreshMessageIn 0.4s ease-out forwards;\n  /* border: 1px solid red; */\n\n  @keyframes slideRefreshMessageIn {\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst Graph = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  height: 8rem;\n  opacity: 0;\n  transform: scale(-1, -1);\n  animation: fadeD3GraphIn 0.8s ease-out forwards;\n  background-color: #fff;\n  border-top: 2px solid #7249d1;\n  border-right: 2px solid #7249d1;\n  /* border: 1px solid greenyellow; */\n\n  @keyframes fadeD3GraphIn {\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst Refresh = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 8rem;\n  height: 4rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  border-radius: 5px;\n  border: 2px solid #333;\n`;\nconst TimeoutParagraph = styled.p`\n  font-size: 2.5rem;\n  color: red;\n\n  span {\n    color: blue;\n  }\n`;\nconst Legend = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 2rem;\n  font-size: 0.8rem;\n  text-align: center;\n  top: calc(100% - 2rem);\n  left: calc(50% - 25%);\n  transform: rotate(180deg);\n  pointer-events: none;\n  /* border: 1px solid blue; */\n`;\nconst LeftInfoBar = styled.div`\n  position: absolute;\n  top: 0;\n  left: calc(100% - 1.2rem);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n  align-items: center;\n  width: 1rem;\n  height: 8rem;\n  padding-top: 1rem;\n  transform: rotate(180deg);\n  /* border: 1px solid blue; */\n\n  span {\n    font-size: 0.6rem;\n    text-align: center;\n    margin: 0.3rem;\n    background-color: #fff;\n    visibility: hidden;\n\n    @media ${device.tabletS} {\n      visibility: visible;\n    }\n  }\n\n  span:nth-child(2) {\n    visibility: visible;\n  }\n\n  @media ${device.tabletS} {\n    left: 100%;\n  }\n`;\nconst HoverValParagraph = styled.p`\n  span {\n    color: ${(props) => props.color};\n  }\n`;\nconst BottomInfoBar = styled.div`\n  position: absolute;\n  top: -1.2rem;\n  left: 0;\n  display: none;\n  width: 100%;\n  height: 1rem;\n  font-size: 0.6rem;\n  justify-content: space-between;\n  transform: rotate(180deg);\n  /* border: 1px solid red; */\n\n  span {\n    background-color: #fff;\n    border-radius: 8px;\n    /* background-color: #fff; */\n  }\n\n  @media ${device.tablet} {\n    display: flex;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/Reports.js",["186","187","188","189"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/HowManyStocks.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/reportWebVitals.js",[],["190","191"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/StocksProvider.js",["192"],"import React, { useState, useEffect, createContext } from \"react\";\nimport { firestore } from \"../Firebase/firebase\";\n\n// CONTEXT\nexport const StocksContext = createContext({\n  stocks: null,\n  getStocks: () => {},\n  loading: false,\n  tickerData: null,\n  showAddForm: false,\n  showAllDivs: { show: false, payouts: [], stock: {} },\n  showAllDivsAction: () => {},\n  setTickerDataAction: () => {},\n});\n\n// PROVIDER\nconst StocksProvider = ({ children }) => {\n  const [stocks, setStocks] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showAllDivs, setShowAllDivs] = useState({\n    show: false,\n    payouts: [],\n    stock: null,\n  });\n  const [loading, setLoading] = useState(false);\n  const showAllDivsAction = (obj) => setShowAllDivs(obj);\n  const [tickerData, setTickerData] = useState(null);\n  const setTickerDataAction = (data) => setTickerData(data);\n\n  // get all of the stocks from firebase and set to local storage if not there\n  const getStocks = async () => {\n    setLoading(true);\n    if (window.localStorage.getItem(\"stocks\")) {\n      setLoading(false);\n      setStocks(JSON.parse(window.localStorage.getItem(\"stocks\")));\n    } else {\n      const stocksCollectionRef = firestore.collection(\"symbols\");\n      let res = await stocksCollectionRef\n        .get()\n        .then((data) => {\n          let dataStocks = data.docs[0].data().symbols;\n          setStocks(dataStocks);\n          console.log(typeof dataStocks);\n          setLoading(false);\n          return dataStocks;\n        })\n        .then((data) => {\n          // set as localStorage\n          window.localStorage.setItem(\"stocks\", JSON.stringify(data));\n        })\n        .catch((err) => {\n          return {\n            message: err.message,\n          };\n        });\n    }\n  };\n\n  useEffect(() => {}, [stocks]);\n\n  return (\n    <StocksContext.Provider\n      value={{\n        getStocks,\n        loading,\n        stocks,\n        showAllDivs,\n        tickerData,\n        showAllDivsAction,\n        setTickerDataAction,\n        showAddForm,\n        setShowAddForm,\n      }}\n    >\n      {children}\n    </StocksContext.Provider>\n  );\n};\n\nexport default StocksProvider;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Context/UserProvider.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Shared/ErrorComponent.js",[],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/MostDividends.js",["193"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MostDividends = ({ stocks }) => {\n  const [topStocks, setTopStocks] = useState(null);\n\n  useEffect(() => {\n    if (!topStocks) {\n      getMostDividends(stocks);\n    }\n  }, [topStocks]);\n\n  const getMostDividends = (arr) => {\n    let amountsArr = arr.map((s) => {\n      if (s.payouts) {\n        return { ...s, total: getTotal(s.payouts) };\n      } else {\n        return { ...s, total: 0 };\n      }\n    });\n    setTopStocks(amountsArr.sort((a, b) => (a.total < b.total ? 1 : -1)));\n  };\n\n  // generate total for dividend sorts\n  const getTotal = (divsArr) => {\n    let total = 0;\n    divsArr.forEach((payout) => {\n      let amount = parseFloat(payout.amount);\n      total += amount;\n    });\n    return total;\n  };\n\n  return (\n    <Container>\n      {topStocks ? (\n        <div>\n          <p>Your top paying stocks:</p>\n          <ul>\n            {topStocks.slice(0, 3).map((stock) => (\n              <li key={stock.ticker}>{stock.name}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        \"You have no dividend payouts to track yet.\"\n      )}\n    </Container>\n  );\n};\n\nexport default MostDividends;\n\n// styles\nconst Container = styled.section`\n  padding: 1rem;\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/UtilitiesRow.js",["194"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/TickerIcon.js",["195"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TickerIcon = ({ symbol }) => {\n  const [placeholder] = useState(\n    \"https://res.cloudinary.com/drucvvo7f/image/upload/v1614894683/Dividend%20Tracker/Icons/tickerplaceholder_bn3avi.jpg\"\n  );\n  const [tickerUrl] = useState(\n    `https://eodhistoricaldata.com/img/logos/US/${symbol}.png`\n  );\n  const [urlToUse, setUrlToUse] = useState(tickerUrl);\n  const [subscribed, setSubscribed] = useState(true);\n\n  useEffect(() => {\n    // check if the url is valid\n    imageExists(tickerUrl, async function (exists) {\n      if (exists && subscribed) {\n        setUrlToUse(tickerUrl);\n      } else {\n        setUrlToUse(placeholder);\n        return;\n      }\n    });\n\n    return () => {\n      setSubscribed(false);\n    };\n  }, [symbol, urlToUse]);\n\n  const imageExists = (url, callback) => {\n    var img = new Image();\n\n    img.onload = async function () {\n      await callback(true);\n    };\n    img.onerror = async function () {\n      await callback(false);\n    };\n    img.src = url;\n  };\n\n  return (\n    <Container>\n      <img src={urlToUse} alt=\"ticker\" />\n    </Container>\n  );\n};\n\nexport default TickerIcon;\n\n// styles\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: calc(100% - 2rem);\n  margin-left: auto;\n  /* border: 1px solid red; */\n\n  img {\n    width: 2rem;\n  }\n`;\n","/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/ReportComponents/DividendTotal.js",["196"],"/Users/jonathancooper 1/Desktop/Projects/GitHub/dividendtracker/src/Components/Home/IncludeArchived.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":28,"column":6,"nodeType":"203","endLine":28,"endColumn":12,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":39,"column":6,"nodeType":"203","endLine":39,"endColumn":13,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"211","line":26,"column":6,"nodeType":"203","endLine":26,"endColumn":49,"suggestions":"212"},{"ruleId":"201","severity":1,"message":"213","line":30,"column":6,"nodeType":"203","endLine":30,"endColumn":28,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"215","line":41,"column":6,"nodeType":"203","endLine":41,"endColumn":25,"suggestions":"216"},{"ruleId":"207","severity":1,"message":"217","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":13},{"ruleId":"207","severity":1,"message":"218","line":8,"column":8,"nodeType":"209","messageId":"210","endLine":8,"endColumn":26},{"ruleId":"207","severity":1,"message":"219","line":34,"column":11,"nodeType":"209","messageId":"210","endLine":34,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":16},{"ruleId":"207","severity":1,"message":"220","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":21},{"ruleId":"207","severity":1,"message":"221","line":98,"column":7,"nodeType":"209","messageId":"210","endLine":98,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"222","line":44,"column":6,"nodeType":"203","endLine":44,"endColumn":25,"suggestions":"223"},{"ruleId":"207","severity":1,"message":"208","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"224","line":41,"column":6,"nodeType":"203","endLine":48,"endColumn":4,"suggestions":"225"},{"ruleId":"207","severity":1,"message":"226","line":167,"column":13,"nodeType":"209","messageId":"210","endLine":167,"endColumn":18},{"ruleId":"207","severity":1,"message":"227","line":170,"column":13,"nodeType":"209","messageId":"210","endLine":170,"endColumn":26},{"ruleId":"207","severity":1,"message":"228","line":172,"column":13,"nodeType":"209","messageId":"210","endLine":172,"endColumn":23},{"ruleId":"207","severity":1,"message":"229","line":174,"column":15,"nodeType":"209","messageId":"210","endLine":174,"endColumn":21},{"ruleId":"207","severity":1,"message":"230","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":15},{"ruleId":"207","severity":1,"message":"231","line":12,"column":30,"nodeType":"209","messageId":"210","endLine":12,"endColumn":41},{"ruleId":"207","severity":1,"message":"232","line":13,"column":11,"nodeType":"209","messageId":"210","endLine":13,"endColumn":28},{"ruleId":"207","severity":1,"message":"233","line":13,"column":30,"nodeType":"209","messageId":"210","endLine":13,"endColumn":40},{"ruleId":"197","replacedBy":"234"},{"ruleId":"199","replacedBy":"235"},{"ruleId":"207","severity":1,"message":"236","line":38,"column":11,"nodeType":"209","messageId":"210","endLine":38,"endColumn":14},{"ruleId":"201","severity":1,"message":"237","line":11,"column":6,"nodeType":"203","endLine":11,"endColumn":17,"suggestions":"238"},{"ruleId":"201","severity":1,"message":"239","line":18,"column":6,"nodeType":"203","endLine":18,"endColumn":14,"suggestions":"240"},{"ruleId":"201","severity":1,"message":"241","line":28,"column":6,"nodeType":"203","endLine":28,"endColumn":24,"suggestions":"242"},{"ruleId":"207","severity":1,"message":"243","line":1,"column":28,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUserAction'. Either include it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["246"],"React Hook useEffect has missing dependencies: 'handleSearchFilter' and 'updateUserStocks'. Either include them or remove the dependency array.",["247"],"no-unused-vars","'device' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a duplicate dependency: 'showAllDivs'. Either omit it or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'getStocks' and 'showHideNavbar'. Either include them or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.",["249"],"React Hook useEffect has missing dependencies: 'alreadyAddedCheck', 'currentUserStocks', and 'filterResults'. Either include them or remove the dependency array.",["250"],"'nas' is defined but never used.","'GoogleSignInButton' is defined but never used.","'userRef' is assigned a value but never used.","'spinnerIcon' is assigned a value but never used.","'LoaderSmall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTotal', 'stock.ticker', and 'stockPayouts.length'. Either include them or remove the dependency array. If 'setStockPayouts' needs the current value of 'stock.ticker', you can also switch to useReducer instead of useState and read 'stock.ticker' in the reducer.",["251"],"React Hook useEffect has missing dependencies: 'arr', 'drawChart', 'handleDuplicateGraph', and 'makeInfoValues'. Either include them or remove the dependency array.",["252"],"'cents' is assigned a value but never used.","'lowestPennies' is assigned a value but never used.","'difference' is assigned a value but never used.","'change' is assigned a value but never used.","'D3Graph' is defined but never used.","'currentUser' is assigned a value but never used.","'showAllDivsAction' is assigned a value but never used.","'tickerData' is assigned a value but never used.",["244"],["245"],"'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMostDividends' and 'stocks'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'showHideNavbar'. Either include it or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'placeholder', 'subscribed', and 'tickerUrl'. Either include them or remove the dependency array.",["255"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [setCurrentUserAction]",{"range":"276","text":"277"},"Update the dependencies array to be: [handleSearchFilter, query, updateUserStocks]",{"range":"278","text":"279"},"Update the dependencies array to be: [showAllDivs, showViewAllForm]",{"range":"280","text":"281"},"Update the dependencies array to be: [stocks, navbar, showHideNavbar, getStocks]",{"range":"282","text":"283"},"Update the dependencies array to be: [alreadyAddedCheck, currentUserStocks, filterResults, query, tickersArr]",{"range":"284","text":"285"},"Update the dependencies array to be: [currentUserStocks, getTotal, stock.ticker, stockPayouts.length]",{"range":"286","text":"287"},"Update the dependencies array to be: [valueArr, infoValues, useTimeoutView, showRefresh, loading, handleDuplicateGraph, arr, makeInfoValues, drawChart]",{"range":"288","text":"289"},"Update the dependencies array to be: [getMostDividends, stocks, topStocks]",{"range":"290","text":"291"},"Update the dependencies array to be: [navbar, showHideNavbar]",{"range":"292","text":"293"},"Update the dependencies array to be: [placeholder, subscribed, symbol, tickerUrl, urlToUse]",{"range":"294","text":"295"},[990,996],"[setCurrentUserAction]",[1506,1513],"[handleSearchFilter, query, updateUserStocks]",[1027,1070],"[showAllDivs, showViewAllForm]",[1062,1084],"[stocks, navbar, showHideNavbar, getStocks]",[1754,1773],"[alreadyAddedCheck, currentUserStocks, filterResults, query, tickersArr]",[1676,1695],"[currentUserStocks, getTotal, stock.ticker, stockPayouts.length]",[1269,1374],"[valueArr, infoValues, useTimeoutView, showRefresh, loading, handleDuplicateGraph, arr, makeInfoValues, drawChart]",[271,282],"[getMostDividends, stocks, topStocks]",[614,622],"[navbar, showHideNavbar]",[814,832],"[placeholder, subscribed, symbol, tickerUrl, urlToUse]"]